{"ast":null,"code":"import \"antd/es/message/style/css\";\nimport _message from \"antd/es/message\";\nimport ajax from \"./ajax.jsx\";\nimport jsonp from \"jsonp\"; // 包含应用中所有接口请求函数的模块\n// 要求:能根据接口文档定义接口请求\n// 每个函数的返回值都是promise\n//登陆\n\nexport const reqLogin = (username, password) => ajax(\"auth/oauth/login\", {\n  username,\n  password\n}, \"POST\");\nexport const reqCheckLogin = token => ajax(\"auth/oauth/verify\", {\n  token\n}, \"POST\");\nexport const reqUser = user => ajax(\"api/user/saveUser\", {\n  user\n}, \"POST\");\nexport const reqUsers = username => ajax(\"api/user/list\", {\n  username\n}, \"POST\"); //添加或更新用户\n\nexport const reqAddOrUpdateUser = user => ajax(\"http://120.55.193.14:5000/manage/user/\" + (user._id ? 'update' : 'add'), user, \"POST\");\n/* jsonp请求的接口请求函数 */\n\nexport const reqWeather = city => {\n  return new Promise((resolve, reject) => {\n    const url = `http://restapi.amap.com/v3/weather/weatherInfo?key=98c97d10c1fda37bdc5402d15c1cdd71&city=${city}`;\n    jsonp(url, {}, (err, data) => {\n      //   console.log(err, data);\n      if (!err && data.status === \"1\") {\n        const {\n          weather\n        } = data.lives[0];\n        resolve({\n          weather\n        });\n      } else {\n        _message.error(\"天气获取失败\");\n      }\n    });\n  });\n}; // 获取一级二级分类列表\n\nexport const reqCategorys = parentId => ajax(\"/manage/category/list\", {\n  parentId\n}); // reqWeather(\"北京\");\n\nexport const reqAddCategory = (categoryName, parentId) => ajax(\"/manage/category/add\", {\n  categoryName,\n  parentId\n}, \"post\");\nexport const reqUpdateCategory = (categoryId, categoryName) => ajax(\"/manage/category/update\", {\n  categoryId,\n  categoryName\n}, \"post\");\nexport const reqProducts = (pageNum, pageSize) => ajax(`http://120.55.193.14:5000/manage/product/list?pageNum=${pageNum}&pageSize=${pageSize}`);\n/* 搜索商品分页列表,或者根据商品描述，或者商品名称 */\n\nexport const reqProductsSearch = (pageNum, pageSize, searchName, searchType) => ajax('http://120.55.193.14:5000/manage/product/search', {\n  pageNum,\n  pageSize,\n  [searchType]: searchName\n});\n/* 获取一个分类 */\n\nexport const reqCategory = categoryId => ajax('http://120.55.193.14:5000/manage/category/info', {\n  categoryId\n});\n/* 更新商品的状态(上/下) */\n\nexport const reqUpdateStatus = (productId, status) => ajax('http://120.55.193.14:5000/manage/product/updateStatus', {\n  productId,\n  status\n}, 'post'); //添加/修改商品  //多加一个/\n\nexport const reqAddProduct = product => ajax('http://120.55.193.14:5000/manage/product/' + (product._id ? 'update' : 'add'), product, 'post'); //这个本身是对象，所以不用加{}\n//删除指定名称的图片\n\nexport const reqDelImg = name => ajax('http://120.55.193.14:5000/manage/img/delete', {\n  name\n}, 'post'); //获取所有角色列表\n\nexport const reqRoleList = () => ajax('http://120.55.193.14:5000/manage/role/list'); //添加角色   //参数加{}要求名字对应 不加要求顺序对应\n\nexport const reqAddRole = roleName => ajax('http://120.55.193.14:5000/manage/role/add', {\n  roleName\n}, 'post'); //更新权限\n\nexport const reqUpdateRole = role => ajax('http://120.55.193.14:5000/manage/role/update', role, 'post'); //获取用户列表所有\n// export const reqUsers = () => ajax('http://120.55.193.14:5000/manage/user/list')\n//删除指定用户\n\nexport const reqDelUser = userId => ajax('http://120.55.193.14:5000/manage/user/delete', {\n  userId\n}, 'post'); //添加用户\n// export const reqAddUser = (user) => ajax('http://120.55.193.14:5000/manage/user/add',{user},'post')","map":{"version":3,"sources":["/Users/danyangliu/Downloads/React-admin/src/api/index.js"],"names":["ajax","jsonp","reqLogin","username","password","reqCheckLogin","token","reqUser","user","reqUsers","reqAddOrUpdateUser","_id","reqWeather","city","Promise","resolve","reject","url","err","data","status","weather","lives","error","reqCategorys","parentId","reqAddCategory","categoryName","reqUpdateCategory","categoryId","reqProducts","pageNum","pageSize","reqProductsSearch","searchName","searchType","reqCategory","reqUpdateStatus","productId","reqAddProduct","product","reqDelImg","name","reqRoleList","reqAddRole","roleName","reqUpdateRole","role","reqDelUser","userId"],"mappings":"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","sourcesContent":["// import json from jsonp\nimport { message } from \"antd\";\nimport ajax from \"./ajax.jsx\";\nimport jsonp from \"jsonp\";\n// 包含应用中所有接口请求函数的模块\n// 要求:能根据接口文档定义接口请求\n// 每个函数的返回值都是promise\n\n//登陆\n\nexport const reqLogin = (username, password) =>\n  ajax(\"auth/oauth/login\", { username, password }, \"POST\");\n\nexport const reqCheckLogin = (token) =>\n  ajax(\"auth/oauth/verify\", {token}, \"POST\");  \n\n  export const reqUser= (user) =>\n  ajax(\"api/user/saveUser\", {user}, \"POST\"); \n\nexport const reqUsers = (username) => ajax(\"api/user/list\", {username}, \"POST\")\n\n\n\n//添加或更新用户\nexport const reqAddOrUpdateUser = (user) => ajax(\"http://120.55.193.14:5000/manage/user/\"+(user._id?'update':'add'), user, \"POST\");\n\n/* jsonp请求的接口请求函数 */\nexport const reqWeather = (city) => {\n  return new Promise((resolve, reject) => {\n    const url = `http://restapi.amap.com/v3/weather/weatherInfo?key=98c97d10c1fda37bdc5402d15c1cdd71&city=${city}`;\n    jsonp(url, {}, (err, data) => {\n      //   console.log(err, data);\n      if (!err && data.status === \"1\") {\n        const { weather } = data.lives[0];\n        resolve({ weather });\n      } else {\n        message.error(\"天气获取失败\");\n      }\n    });\n  });\n};\n// 获取一级二级分类列表\nexport const reqCategorys = (parentId) =>\n  ajax(\"/manage/category/list\", { parentId });\n// reqWeather(\"北京\");\nexport const reqAddCategory = (categoryName, parentId) =>\n  ajax(\"/manage/category/add\", { categoryName, parentId }, \"post\");\n\nexport const reqUpdateCategory = (categoryId, categoryName) =>\n  ajax(\"/manage/category/update\", { categoryId, categoryName }, \"post\");\n\nexport const reqProducts = (pageNum, pageSize) =>\n  ajax(\n    `http://120.55.193.14:5000/manage/product/list?pageNum=${pageNum}&pageSize=${pageSize}`\n  );\n/* 搜索商品分页列表,或者根据商品描述，或者商品名称 */\nexport const reqProductsSearch = ( pageNum, pageSize , searchName,searchType) =>\n  ajax(\n    'http://120.55.193.14:5000/manage/product/search',\n    { pageNum, pageSize, [searchType]:searchName }\n  );\n\n  /* 获取一个分类 */\n  export const reqCategory = (categoryId) => ajax('http://120.55.193.14:5000/manage/category/info',{categoryId})\n  /* 更新商品的状态(上/下) */\n  export const reqUpdateStatus = (productId,status) => ajax('http://120.55.193.14:5000/manage/product/updateStatus',{productId,status},'post')\n  \n  //添加/修改商品  //多加一个/\n  export const reqAddProduct = (product) => ajax('http://120.55.193.14:5000/manage/product/'+(product._id?'update':'add'),product,'post')//这个本身是对象，所以不用加{}\n  \n  //删除指定名称的图片\n  export const reqDelImg = (name) => ajax('http://120.55.193.14:5000/manage/img/delete',{name},'post')\n  //获取所有角色列表\n  export const reqRoleList = () => ajax('http://120.55.193.14:5000/manage/role/list')\n  //添加角色   //参数加{}要求名字对应 不加要求顺序对应\n  export const reqAddRole = (roleName) => ajax('http://120.55.193.14:5000/manage/role/add',{roleName},'post')\n//更新权限\n  export const reqUpdateRole = (role) => ajax('http://120.55.193.14:5000/manage/role/update',role,'post')\n  //获取用户列表所有\n  // export const reqUsers = () => ajax('http://120.55.193.14:5000/manage/user/list')\n  \n\n  //删除指定用户\n  export const reqDelUser = (userId) => ajax('http://120.55.193.14:5000/manage/user/delete',{userId},'post')\n  //添加用户\n  // export const reqAddUser = (user) => ajax('http://120.55.193.14:5000/manage/user/add',{user},'post')"]},"metadata":{},"sourceType":"module"}