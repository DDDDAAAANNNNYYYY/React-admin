{"ast":null,"code":"import \"antd/es/card/style/css\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/table/style/css\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/message/style/css\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"/Users/danyangliu/Downloads/React-admin/src/pages/users/index.jsx\";\nimport React, { Component } from \"react\";\nimport { PAGE_SIZE } from \"../../utils/constant\";\nimport { formateDate } from \"../../utils/dataUtils\";\nimport memoryUtils from \"../../utils/memoryUtils\";\nimport storageUtils from \"../../utils/storageUtils\";\nimport LinkButton from \"../../component/link-button\";\nimport { reqDelUser, reqUsers, reqAddOrUpdateUser } from \"../../api\";\nimport UserForm from \"./user-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Users extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      showStatus: 0,\n      roles: [],\n      user: {},\n      visible: 1,\n      more: true\n    };\n\n    this.initColumns = () => {\n      this.columns = [{\n        title: \"Week\",\n        dataIndex: \"username\"\n      }, {\n        title: \"Hours\",\n        dataIndex: \"hours\"\n      }, {\n        title: \"Status\",\n        dataIndex: \"submissionStatus\"\n      }, {\n        title: \"Approval\",\n        dataIndex: \"approvalStatus\" // render: (create_time) => formateDate(create_time),\n\n      }, {\n        title: \"Comments\",\n        dataIndex: \"comments\"\n      }, {\n        title: \"Options\",\n        render: user => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(LinkButton, {\n            onClick: () => {\n              this.props.history.push('/product', {\n                user\n              });\n              storageUtils.saveIndex(1);\n            },\n            children: user.option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }];\n    };\n\n    this.getUsers = async () => {\n      const name = memoryUtils.user.name;\n      const result = await reqUsers(name);\n\n      if (true) {\n        const users = result;\n        console.log(result);\n        console.log(users);\n        storageUtils.saveList(result); // this.initRoles(roles);\n\n        this.setState({\n          users\n        });\n      } else {\n        _message.error(\"failsed\");\n      }\n    };\n\n    this.us = /*#__PURE__*/React.createRef();\n  }\n\n  // addOrUpdateuser = async () => {\n  //   //收集数据\n  //   let user = this.us.current.addOrUpdateUser();\n  //   user.create_time = Date.now();\n  //   if (this.state.user._id) {\n  //     user._id = this.state.user._id;\n  //   }\n  //   //   2.提交添加的请求\n  //   const result = await reqAddOrUpdateUser(user);\n  //   // 3.更新列表显示\n  //   if (result.status === 0) {\n  //     message.success(`${this.state.user._id?'修改':'添加'}角色成功`);\n  //     this.getUsers();\n  //     this.setState({ showStatus: 0 });\n  //   } else {\n  //     message.error(`${this.state.user._id?'修改':'添加'}角色失败`);\n  //   }\n  //   // //console.log(user);\n  // };\n  // showUpdate = (user) => {\n  //   this.state.user = user;\n  //   this.setState({ showStatus: 1 });\n  // };\n  UNSAFE_componentWillMount() {\n    this.initColumns();\n  }\n\n  componentDidMount() {\n    this.getUsers();\n  } // handleCancel = () => {\n  //   alert(\"here\")\n  //   this.setState({ showStatus: 0 });\n  // };\n\n\n  render() {\n    const {\n      users,\n      showStatus,\n      roles\n    } = this.state; ////console.log(users);\n    // const title = (\n    //   <Button\n    //     type=\"primary\"\n    //     onClick={() => {\n    //       this.setState({ showStatus: 1, user: {} });\n    //     }}\n    //   >\n    //     创建用户\n    //   </Button>\n    // );\n\n    return /*#__PURE__*/_jsxDEV(_Card, {\n      children: [/*#__PURE__*/_jsxDEV(_Table, {\n        // rowKey=\"_id\"\n        // pagination={{\n        //   pageSize: 1,\n        //   // , total: 50\n        // }}\n        pagination: false,\n        dataSource: users.slice(0, this.state.visible),\n        columns: this.columns,\n        bordered: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: this.state.more ? \"block\" : \"none\"\n        },\n        children: /*#__PURE__*/_jsxDEV(_Button, {\n          onClick: () => {\n            this.setState({\n              visible: this.state.visible + 1,\n              more: !this.state.more\n            });\n          },\n          type: \"button\",\n          className: \"load-more\",\n          children: \"Load more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: this.state.more ? \"none\" : \"block\"\n        },\n        children: /*#__PURE__*/_jsxDEV(_Button, {\n          onClick: () => {\n            this.setState({\n              visible: 1,\n              more: !this.state.more\n            });\n          },\n          type: \"button\",\n          className: \"load-more\",\n          children: \"Load less\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/danyangliu/Downloads/React-admin/src/pages/users/index.jsx"],"names":["React","Component","PAGE_SIZE","formateDate","memoryUtils","storageUtils","LinkButton","reqDelUser","reqUsers","reqAddOrUpdateUser","UserForm","Users","constructor","props","state","users","showStatus","roles","user","visible","more","initColumns","columns","title","dataIndex","render","history","push","saveIndex","option","getUsers","name","result","console","log","saveList","setState","error","us","createRef","UNSAFE_componentWillMount","componentDidMount","slice","display"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Card, Table, Modal, message } from \"antd\";\nimport { PAGE_SIZE } from \"../../utils/constant\";\nimport { formateDate } from \"../../utils/dataUtils\";\nimport memoryUtils from \"../../utils/memoryUtils\";\nimport storageUtils from \"../../utils/storageUtils\";\nimport LinkButton from \"../../component/link-button\";\nimport { reqDelUser, reqUsers, reqAddOrUpdateUser } from \"../../api\";\nimport UserForm from \"./user-form\";\nexport default class Users extends Component {\n  state = {\n    users: [], \n    showStatus: 0,\n    roles: [],\n    user: {},\n    visible: 1,\n    more: true,\n  };\n  constructor(props) {\n    super(props);\n    this.us = React.createRef();\n  }\n  initColumns = () => {\n    this.columns = [\n      {\n        title: \"Week\",\n        dataIndex: \"username\",\n      },\n      {\n        title: \"Hours\",\n        dataIndex: \"hours\",\n      },\n      {\n        title: \"Status\",\n        dataIndex: \"submissionStatus\",\n      },\n      {\n        title: \"Approval\",\n        dataIndex: \"approvalStatus\",\n        // render: (create_time) => formateDate(create_time),\n      },\n      {\n        title: \"Comments\",\n        dataIndex: \"comments\",\n        \n      },\n      {\n        title: \"Options\",\n        render: (user) => (\n          \n          \n          <span>\n            {/* <LinkButton onClick={() => this.showUpdate(user)}>修改</LinkButton> */}\n            {/* <LinkButton onClick={() => this.deleteUser(user)}>删除</LinkButton> */}\n            {/* <LinkButton onClick={() => this._handleButtonClick(user)}>go</LinkButton> */}\n            \n            <LinkButton onClick={()=>{this.props.history.push('/product', {user});\n              storageUtils.saveIndex(1);\n            }}>{user.option}</LinkButton>\n          </span>\n        ),\n      },\n    ];\n  };\n  \n  \n\n  /* 删除指定用户 */\n\n  // deleteUser = (user) => {\n  //   Modal.confirm({\n  //     title: `确认删除${user.username}吗?`,\n\n  //     onOk: async () => {\n  //       const result = await reqDelUser(user._id);\n  //       if (result.status === 0) {\n  //         message.success(\"删除用户成功!\");\n  //         this.getUsers();\n  //       } else {\n  //         message.error(\"删除用户失败!\");\n  //       }\n  //     },\n  //   });\n  // };\n  \n  getUsers = async () => {\n    const name = memoryUtils.user.name;\n    const result = await reqUsers(name);\n    \n    if (true) {\n      const  users  = result;\n      console.log(result)\n      console.log(users)\n      storageUtils.saveList(result)\n      // this.initRoles(roles);\n      this.setState({ users});\n    } else {\n      message.error(\"failsed\");\n    }\n  };\n  // addOrUpdateuser = async () => {\n    \n  //   //收集数据\n  //   let user = this.us.current.addOrUpdateUser();\n  //   user.create_time = Date.now();\n  //   if (this.state.user._id) {\n  //     user._id = this.state.user._id;\n  //   }\n  //   //   2.提交添加的请求\n  //   const result = await reqAddOrUpdateUser(user);\n  //   // 3.更新列表显示\n  //   if (result.status === 0) {\n  //     message.success(`${this.state.user._id?'修改':'添加'}角色成功`);\n  //     this.getUsers();\n  //     this.setState({ showStatus: 0 });\n  //   } else {\n  //     message.error(`${this.state.user._id?'修改':'添加'}角色失败`);\n  //   }\n  //   // //console.log(user);\n  // };\n  // showUpdate = (user) => {\n  //   this.state.user = user;\n  //   this.setState({ showStatus: 1 });\n  // };\n  UNSAFE_componentWillMount() {\n    this.initColumns();\n  }\n  componentDidMount() {\n    this.getUsers();\n  }\n  // handleCancel = () => {\n  //   alert(\"here\")\n  //   this.setState({ showStatus: 0 });\n  // };\n  render() {\n    const { users, showStatus, roles } = this.state;\n    ////console.log(users);\n    // const title = (\n    //   <Button\n    //     type=\"primary\"\n    //     onClick={() => {\n    //       this.setState({ showStatus: 1, user: {} });\n    //     }}\n    //   >\n    //     创建用户\n    //   </Button>\n    // );\n    return (\n      \n      <Card >\n        <Table\n          // rowKey=\"_id\"\n          // pagination={{\n          //   pageSize: 1,\n          //   // , total: 50\n          // }}\n          pagination={ false }\n          dataSource={users.slice(0,this.state.visible)}\n          columns={this.columns}\n          bordered\n          \n        />\n        {/* {users.slice(0,1).map((x, i) => {\n        return <div key={i} className=\"box\">\n          \n          <div className=\"name\"><span>{x.username}</span> \n          <span>                  </span>\n          <span>{x.totalHours}</span></div>  \n          <div className=\"name\"> </div>     \n        </div>\n      })} */}\n      <div style={{ display: this.state.more ? \"block\" : \"none\"}}>\n          <Button onClick={()=>{this.setState({visible:this.state.visible+1,\n          more: !this.state.more\n          })}} type=\"button\" className=\"load-more\">Load more</Button>\n          </div>\n          <div style={{ display: this.state.more ? \"none\" : \"block\"}}>\n          <Button onClick={()=>{this.setState({visible:1,\n          more: !this.state.more\n          })}} type=\"button\" className=\"load-more\">Load less</Button>\n          </div>\n\n        {/* <Modal\n          title={this.state.user._id ? \"修改用户\" : \"添加用户\"}\n          visible={showStatus === 1}\n          onOk={this.addOrUpdateuser}\n          onCancel={this.handleCancel}\n          destroyOnClose={true}\n        >\n          <UserForm roles={roles} ref={this.us} user={this.state.user} />\n         \n        </Modal> */}\n      </Card>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}