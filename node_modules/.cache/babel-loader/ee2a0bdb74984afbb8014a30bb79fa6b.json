{"ast":null,"code":"import \"antd/es/menu/style/css\";\nimport _Menu from \"antd/es/menu\";\nvar _jsxFileName = \"/Users/danyangliu/Downloads/React-admin/src/component/left-nav/index.jsx\";\nimport React, { Component } from \"react\";\nimport \"./index.less\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport logo from \"../../assets/image/logo.png\";\nimport menuList from \"../../config/menuConfig\";\nimport memoryUtils from \"../../utils/memoryUtils\";\n/* \n左侧导航的组件\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  SubMenu\n} = _Menu;\n\nclass LeftNav extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getMenuNodes_map = menuList => {\n      // map加递归\n      return menuList.map(item => {\n        /* \n        title\n        key\n        icon\n        chilren 可能有 */\n        if (!item.children) {\n          return /*#__PURE__*/_jsxDEV(_Menu.Item, {\n            icon: item.icon,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: item.key,\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 13\n            }, this)\n          }, item.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 11\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(SubMenu, {\n            icon: item.icon,\n            title: item.title,\n            children: this.getMenuNodes(item.children)\n          }, item.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 11\n          }, this);\n        }\n      });\n    };\n\n    this.hasAuth = item => {\n      const key = item.key; // const menus = memoryUtils.user.role.menus\n      // const username = memoryUtils.user.username\n\n      const menus = \"admin\";\n      const username = \"admin\"; // console.log(username)\n\n      /*\n      1.如果当前用户是admin,直接通过 \n      2.如果当前item是公开的\n      3.当前用户有此item的权限\n       */\n\n      if (username === 'admin' || key === './home' || menus.indexOf(key) !== -1) {\n        return true;\n      } else if (item.children) {\n        //有一个子item的权限,\n        return !!item.children.find(child => menus.indexOf(child.key) !== -1);\n      }\n\n      return false;\n    };\n\n    this.getMenuNodes = menuList => {\n      const path = this.props.location.pathname;\n      return menuList.reduce((pre, item) => {\n        //查看当前用户是否有item对应的权限\n        if (this.hasAuth(item)) {\n          //像pre中添加《item》或者《submenu》\n          if (!item.children) {\n            pre.push( /*#__PURE__*/_jsxDEV(_Menu.Item, {\n              icon: item.icon,\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: item.key,\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 15\n              }, this)\n            }, item.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 13\n            }, this));\n          } else {\n            const cItem = item.children.find(cItem => 0 === path.indexOf(cItem.key)); //如果存在，说明当前item的子列表需要打开\n\n            if (cItem) {\n              this.openkey = item.key;\n            }\n\n            pre.push( /*#__PURE__*/_jsxDEV(SubMenu, {\n              icon: item.icon,\n              title: item.title,\n              children: this.getMenuNodes(item.children)\n            }, item.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 13\n            }, this));\n          }\n        }\n\n        return pre; //记住return pre\n      }, []);\n    };\n\n    this.handleClick = e => {\n      // console.log(\"click \", e);\n      this.setState({\n        current: e.key\n      });\n    };\n  }\n\n  //在第一次render之前执行一次，为第一次render准备数据（必须同步）\n  UNSAFE_componentWillMount() {\n    this.menuNodes = this.getMenuNodes(menuList);\n  }\n\n  render() {\n    // console.log(this)\n    let path = this.props.location.pathname; // console.log(path)\n\n    if (path.indexOf(\"/product\") === 0) {\n      //当前请求的是商品或其子路由界面\n      path = \"/product\";\n    }\n\n    const openkey = this.openkey; // this.setState({current:path})\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"left-nav-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u7845\\u8C37\\u540E\\u53F0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Menu, {\n        theme: \"dark\",\n        onClick: this.handleClick,\n        style: {\n          width: 200\n        },\n        defaultOpenKeys: [openkey],\n        selectedKeys: [path],\n        mode: \"inline\",\n        children: this.menuNodes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(LeftNav);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/danyangliu/Downloads/React-admin/src/component/left-nav/index.jsx"],"names":["React","Component","Link","withRouter","logo","menuList","memoryUtils","SubMenu","LeftNav","getMenuNodes_map","map","item","children","icon","key","title","getMenuNodes","hasAuth","menus","username","indexOf","find","child","path","props","location","pathname","reduce","pre","push","cItem","openkey","handleClick","e","setState","current","UNSAFE_componentWillMount","menuNodes","render","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./index.less\";\nimport { Menu } from \"antd\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport logo from \"../../assets/image/logo.png\";\nimport menuList from \"../../config/menuConfig\";\nimport memoryUtils from \"../../utils/memoryUtils\";\n/* \n左侧导航的组件\n */\nconst { SubMenu } = Menu;\nclass LeftNav extends Component {\n  // state = {\n  //   current: \"1\",\n  // };\n  getMenuNodes_map = (menuList) => {\n    // map加递归\n    return menuList.map((item) => {\n      /* \n      title\n      key\n      icon\n      chilren 可能有 */\n      if (!item.children) {\n        return (\n          <Menu.Item key={item.key} icon={item.icon}>\n            <Link to={item.key}>{item.title}</Link>\n          </Menu.Item>\n        );\n      } else {\n        return (\n          <SubMenu key={item.key} icon={item.icon} title={item.title}>\n            {this.getMenuNodes(item.children)}\n          </SubMenu>\n        );\n      }\n    });\n  };\n  //查看item是否有授权\n  hasAuth = (item) =>{\n    const key = item.key\n    // const menus = memoryUtils.user.role.menus\n    // const username = memoryUtils.user.username\n    const menus = \"admin\"\n    const username = \"admin\"\n    // console.log(username)\n    /*\n    1.如果当前用户是admin,直接通过 \n    2.如果当前item是公开的\n    3.当前用户有此item的权限\n     */\n    if(username==='admin'||key==='./home'||menus.indexOf(key)!==-1){\n      return true\n    }else if(item.children){//有一个子item的权限,\n      return !!item.children.find(child =>menus.indexOf(child.key)!==-1)\n    }\n    return false\n  }\n  //改用reduce调用\n  getMenuNodes = (menuList) => {\n    const path = this.props.location.pathname;\n    return menuList.reduce((pre, item) => {\n      //查看当前用户是否有item对应的权限\n      if (this.hasAuth(item)) {\n        //像pre中添加《item》或者《submenu》\n        if (!item.children) {\n          pre.push(\n            <Menu.Item key={item.key} icon={item.icon}>\n              <Link to={item.key}>{item.title}</Link>\n            </Menu.Item>\n          );\n        } else {\n          const cItem = item.children.find(\n            (cItem) => 0 === path.indexOf(cItem.key)\n          );\n          //如果存在，说明当前item的子列表需要打开\n          if (cItem) {\n            this.openkey = item.key;\n          }\n\n          pre.push(\n            <SubMenu key={item.key} icon={item.icon} title={item.title}>\n              {this.getMenuNodes(item.children)}\n            </SubMenu>\n          );\n        }\n      }\n      return pre; //记住return pre\n    }, []);\n  };\n  handleClick = (e) => {\n    // console.log(\"click \", e);\n    this.setState({\n      current: e.key,\n    });\n  };\n  //在第一次render之前执行一次，为第一次render准备数据（必须同步）\n  UNSAFE_componentWillMount() {\n    this.menuNodes = this.getMenuNodes(menuList);\n  }\n  render() {\n    // console.log(this)\n    let path = this.props.location.pathname;\n    // console.log(path)\n    if (path.indexOf(\"/product\") === 0) {\n      //当前请求的是商品或其子路由界面\n      path = \"/product\";\n    }\n    const openkey = this.openkey;\n    // this.setState({current:path})\n    return (\n      <div>\n        <Link to=\"/\" className=\"left-nav-header\">\n          <img src={logo} alt=\"logo\" />\n          <h1>硅谷后台</h1>\n        </Link>\n\n        {/* <br />\n        <br /> */}\n        <Menu\n          theme=\"dark\"\n          onClick={this.handleClick}\n          style={{ width: 200 }}\n          defaultOpenKeys={[openkey]}\n          selectedKeys={[path]}\n          mode=\"inline\"\n        >\n          {this.menuNodes}\n        </Menu>\n      </div>\n    );\n  }\n}\nexport default withRouter(LeftNav);\n"]},"metadata":{},"sourceType":"module"}