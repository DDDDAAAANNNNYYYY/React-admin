{"ast":null,"code":"import \"antd/es/card/style/css\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/table/style/css\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/message/style/css\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/modal/style/css\";\nimport _Modal from \"antd/es/modal\";\nvar _jsxFileName = \"/Users/danyangliu/Downloads/React-admin/src/pages/users/index.jsx\";\nimport React, { Component } from \"react\";\nimport { PAGE_SIZE } from \"../../utils/constant\";\nimport { formateDate } from \"../../utils/dataUtils\";\nimport LinkButton from \"../../component/link-button\";\nimport { reqDelUser, reqUsers, reqAddOrUpdateUser } from \"../../api\";\nimport UserForm from \"./user-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Users extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      //所有用户列表\n      showStatus: 0,\n      roles: [],\n      user: {},\n      visible: 2\n    };\n\n    this.initColumns = () => {\n      this.columns = [{\n        title: \"Week\",\n        dataIndex: \"username\"\n      }, {\n        title: \"Hours\",\n        dataIndex: \"totalHours\"\n      }, {\n        title: \"Status\",\n        dataIndex: \"submissionStatus\"\n      }, {\n        title: \"Approval\",\n        dataIndex: \"approvalStatus\" // render: (create_time) => formateDate(create_time),\n\n      }, {\n        title: \"Comments\",\n        dataIndex: \"comments\" // render: (role_id) =>\n        //   // {\n        //   //     const role=this.state.roles.find(role=>role._id===role_id)\n        //   //     return role?role.name:''}\n        //   //防止反复生成\n        //   this.roleNames[role_id],\n\n      }, {\n        title: \"Options\",\n        render: user => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(LinkButton, {\n            onClick: () => this.props.history.push('/product', {\n              user\n            }),\n            children: \"go\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }];\n    };\n\n    this.deleteUser = user => {\n      _Modal.confirm({\n        title: `确认删除${user.username}吗?`,\n        onOk: async () => {\n          const result = await reqDelUser(user._id);\n\n          if (result.status === 0) {\n            _message.success(\"删除用户成功!\");\n\n            this.getUsers();\n          } else {\n            _message.error(\"删除用户失败!\");\n          }\n        }\n      });\n    };\n\n    this.getUsers = async () => {\n      const result = await reqUsers();\n\n      if (true) {\n        const users = result;\n        console.log(result);\n        console.log(users); // this.initRoles(roles);\n\n        this.setState({\n          users\n        });\n      } else {\n        _message.error(\"获取角色列表失败\");\n      }\n    };\n\n    this.addOrUpdateuser = async () => {\n      //收集数据\n      let user = this.us.current.addOrUpdateUser();\n      user.create_time = Date.now();\n\n      if (this.state.user._id) {\n        user._id = this.state.user._id;\n      } //   2.提交添加的请求\n\n\n      const result = await reqAddOrUpdateUser(user); // 3.更新列表显示\n\n      if (result.status === 0) {\n        _message.success(`${this.state.user._id ? '修改' : '添加'}角色成功`);\n\n        this.getUsers();\n        this.setState({\n          showStatus: 0\n        });\n      } else {\n        _message.error(`${this.state.user._id ? '修改' : '添加'}角色失败`);\n      } // //console.log(user);\n\n    };\n\n    this.showUpdate = user => {\n      this.state.user = user;\n      this.setState({\n        showStatus: 1\n      });\n    };\n\n    this.handleCancel = () => {\n      alert(\"here\");\n      this.setState({\n        showStatus: 0\n      });\n    };\n\n    this.us = /*#__PURE__*/React.createRef();\n  }\n\n  UNSAFE_componentWillMount() {\n    this.initColumns();\n  }\n\n  componentDidMount() {\n    this.getUsers();\n  }\n\n  render() {\n    const {\n      users,\n      showStatus,\n      roles\n    } = this.state; ////console.log(users);\n    // const title = (\n    //   <Button\n    //     type=\"primary\"\n    //     onClick={() => {\n    //       this.setState({ showStatus: 1, user: {} });\n    //     }}\n    //   >\n    //     创建用户\n    //   </Button>\n    // );\n\n    return /*#__PURE__*/_jsxDEV(_Card, {\n      children: [/*#__PURE__*/_jsxDEV(_Table, {\n        rowKey: \"_id\",\n        pagination: {\n          pageSize: 1 // , total: 50\n\n        },\n        dataSource: users,\n        columns: this.columns,\n        bordered: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Button, {\n        onClick: () => {\n          this.pageSize = 2;\n          alert(this.pageSize);\n        },\n        type: \"button\",\n        className: \"load-more\",\n        children: \"Load more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/danyangliu/Downloads/React-admin/src/pages/users/index.jsx"],"names":["React","Component","PAGE_SIZE","formateDate","LinkButton","reqDelUser","reqUsers","reqAddOrUpdateUser","UserForm","Users","constructor","props","state","users","showStatus","roles","user","visible","initColumns","columns","title","dataIndex","render","history","push","deleteUser","confirm","username","onOk","result","_id","status","success","getUsers","error","console","log","setState","addOrUpdateuser","us","current","addOrUpdateUser","create_time","Date","now","showUpdate","handleCancel","alert","createRef","UNSAFE_componentWillMount","componentDidMount","pageSize"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Card, Table, Modal, message } from \"antd\";\nimport { PAGE_SIZE } from \"../../utils/constant\";\nimport { formateDate } from \"../../utils/dataUtils\";\nimport LinkButton from \"../../component/link-button\";\nimport { reqDelUser, reqUsers, reqAddOrUpdateUser } from \"../../api\";\nimport UserForm from \"./user-form\";\nexport default class Users extends Component {\n  state = {\n    users: [], //所有用户列表\n    showStatus: 0,\n    roles: [],\n    user: {},\n    visible: 2,\n  };\n  constructor(props) {\n    super(props);\n    this.us = React.createRef();\n  }\n  initColumns = () => {\n    this.columns = [\n      {\n        title: \"Week\",\n        dataIndex: \"username\",\n      },\n      {\n        title: \"Hours\",\n        dataIndex: \"totalHours\",\n      },\n      {\n        title: \"Status\",\n        dataIndex: \"submissionStatus\",\n      },\n      {\n        title: \"Approval\",\n        dataIndex: \"approvalStatus\",\n        // render: (create_time) => formateDate(create_time),\n      },\n      {\n        title: \"Comments\",\n        dataIndex: \"comments\",\n        // render: (role_id) =>\n        //   // {\n        //   //     const role=this.state.roles.find(role=>role._id===role_id)\n        //   //     return role?role.name:''}\n        //   //防止反复生成\n        //   this.roleNames[role_id],\n      },\n      {\n        title: \"Options\",\n        render: (user) => (\n          \n          \n          <span>\n            {/* <LinkButton onClick={() => this.showUpdate(user)}>修改</LinkButton> */}\n            {/* <LinkButton onClick={() => this.deleteUser(user)}>删除</LinkButton> */}\n            {/* <LinkButton onClick={() => this._handleButtonClick(user)}>go</LinkButton> */}\n            \n            <LinkButton onClick={()=>this.props.history.push('/product', {user})}>go</LinkButton>\n          </span>\n        ),\n      },\n    ];\n  };\n  /* 根据role数据,生成包含所有角色名的对象 */\n  // initRoles = (roles) => {\n  //   this.roleNames = roles.reduce((pre, role) => {\n  //     pre[role._id] = role.name ? role.name : \"\";\n  //     return pre;\n  //   }, []);\n  // };\n  // _handleButtonClick = (user) => {\n  //   //calculate your data here\n  //   //then redirect:\n  //   this.props.history.push({ //browserHistory.push should also work here\n  //     pathname: '/product',\n  //     info:user\n  //   }); \n  // };\n\n  /* 删除指定用户 */\n\n  deleteUser = (user) => {\n    Modal.confirm({\n      title: `确认删除${user.username}吗?`,\n\n      onOk: async () => {\n        const result = await reqDelUser(user._id);\n        if (result.status === 0) {\n          message.success(\"删除用户成功!\");\n          this.getUsers();\n        } else {\n          message.error(\"删除用户失败!\");\n        }\n      },\n    });\n  };\n  /* 获取用户列表 */\n  getUsers = async () => {\n    const result = await reqUsers();\n    if (true) {\n      const  users  = result;\n      console.log(result)\n      console.log(users)\n      // this.initRoles(roles);\n      this.setState({ users});\n    } else {\n      message.error(\"获取角色列表失败\");\n    }\n  };\n  addOrUpdateuser = async () => {\n    \n    //收集数据\n    let user = this.us.current.addOrUpdateUser();\n    user.create_time = Date.now();\n    if (this.state.user._id) {\n      user._id = this.state.user._id;\n    }\n    //   2.提交添加的请求\n    const result = await reqAddOrUpdateUser(user);\n    // 3.更新列表显示\n    if (result.status === 0) {\n      message.success(`${this.state.user._id?'修改':'添加'}角色成功`);\n      this.getUsers();\n      this.setState({ showStatus: 0 });\n    } else {\n      message.error(`${this.state.user._id?'修改':'添加'}角色失败`);\n    }\n    // //console.log(user);\n  };\n  showUpdate = (user) => {\n    this.state.user = user;\n    this.setState({ showStatus: 1 });\n  };\n  UNSAFE_componentWillMount() {\n    this.initColumns();\n  }\n  componentDidMount() {\n    this.getUsers();\n  }\n  handleCancel = () => {\n    alert(\"here\")\n    this.setState({ showStatus: 0 });\n  };\n  render() {\n    const { users, showStatus, roles } = this.state;\n    ////console.log(users);\n    // const title = (\n    //   <Button\n    //     type=\"primary\"\n    //     onClick={() => {\n    //       this.setState({ showStatus: 1, user: {} });\n    //     }}\n    //   >\n    //     创建用户\n    //   </Button>\n    // );\n    return (\n      <Card >\n        <Table\n          rowKey=\"_id\"\n          pagination={{\n            pageSize: 1,\n            // , total: 50\n          }}\n          dataSource={users}\n          columns={this.columns}\n          bordered\n          \n        />\n          <Button onClick={()=>{this.pageSize=2; alert(this.pageSize)}} type=\"button\" className=\"load-more\">Load more</Button>\n\n        {/* <Modal\n          title={this.state.user._id ? \"修改用户\" : \"添加用户\"}\n          visible={showStatus === 1}\n          onOk={this.addOrUpdateuser}\n          onCancel={this.handleCancel}\n          destroyOnClose={true}\n        >\n          <UserForm roles={roles} ref={this.us} user={this.state.user} />\n         \n        </Modal> */}\n      </Card>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}