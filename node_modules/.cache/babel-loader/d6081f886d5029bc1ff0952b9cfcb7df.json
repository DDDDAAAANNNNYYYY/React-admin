{"ast":null,"code":"import \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nvar _jsxFileName = \"/Users/danyangliu/Downloads/React-admin/src/pages/role/index.jsx\";\nimport React, { Component } from \"react\"; // import { Card, Button, Table, Modal, message } from \"antd\";\n\nimport { PAGE_SIZE } from \"../../utils/constant\";\nimport { reqContact } from \"../../api\";\nimport AddForm from \"./add-form.jsx\";\nimport SetTree from \"./setTree\";\nimport { get } from \"store\";\nimport memoryUtils from '../../utils/memoryUtils';\nimport { formateDate } from '../../utils/dataUtils';\nimport storageUtils from \"../../utils/storageUtils\";\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/* 角色路由 */\n// export default class Role extends Component {\n//   state = {\n//     loading: false,\n//     roles: [],\n//     role: {},\n//     showStatus: 0,\n//   };\n//   constructor(props){\n//       super(props)\n//       this.auth= React.createRef()\n//   }\n//   getRoles = async () => {\n//     const result = await reqRoleList();\n//     if (result.status === 0) {\n//       const roles = result.data;\n//       this.setState({\n//         roles,\n//       });\n//     }\n//   };\n//   initColumn = () => {\n//     this.columns = [\n//       {\n//         title: \"角色名称\",\n//         dataIndex: \"name\",\n//       },\n//       {\n//         title: \"创建时间\",\n//         dataIndex: \"create_time\",\n//         render:(create_time)=>formateDate(create_time)\n//       },\n//       {\n//         title: \"授权时间\",\n//         dataIndex: \"auth_time\",\n//         render:(auth_time)=>formateDate(auth_time)\n//       },\n//       {\n//         title: \"授权人\",\n//         dataIndex: \"auth_name\",\n//       },\n//     ];\n//   };\n//   handleCancel = () => {\n//     this.setState({ showStatus: 0 });\n//   };\n//   addRole = async () => {\n//     const result = await reqAddRole(this.input.props.value);\n//     if (result.status === 0) {\n//       message.success(\"添加角色成功\");\n//       // this.getRoles()\n//       // 可以不请求直接添加到roles列表\n//       const role = result.data;\n//       // const roles =[...this.state.roles]\n//       // roles.push(role)\n//       // this.setState({roles:roles})\n//       this.setState((state) => ({\n//         roles: [...state.roles, role],\n//       }));\n//     } else {\n//       message.error(\"添加角色失败\");\n//     }\n//     this.setState({ showStatus: 0 });\n//   };\n//   setRole = async() => {\n//     //   console.log('select',select)\n//      const menus =  this.auth.current.getMenus()\n//      const role = this.state.role\n//      role.menus=menus\n//      role.auth_time = Date.now()\n//      role.auth_name = memoryUtils.user.username\n//     //  console.log(role)\n//      const result = await reqUpdateRole(role)\n//      if(result.status===0){\n//          message.success('设置权限成功')\n//          //如果更新的是自己角色权限,强制退出\n//         if(memoryUtils.user.username!=='admin'&&role._id===memoryUtils.user.role_id){\n//           memoryUtils.user={}\n//           storageUtils.deleteUser()\n//           this.props.history.replace('./login')\n//           message.info('权限已更改,请重新登录')\n//         }\n//      }else{\n//          message.error('设置权限失败')\n//      }\n//     this.setState({ showStatus: 0 });\n//   };\n//   componentDidMount() {\n//     this.getRoles();\n//   }\n//   UNSAFE_componentWillMount() {\n//     this.initColumn();\n//   }\n//   render() {\n//     const { roles, role, showStatus } = this.state;\n//     // const {username, totalHours, comments, approvalStatus,submissionStatus}=this.props.location.state.user\n//     const title = (\n//       <span>\n//         <Button type=\"primary\" onClick={() => this.setState({ showStatus: 1 })}>\n//           创建角色\n//         </Button>\n//         <Button\n//           type=\"primary\"\n//           onClick={() => this.setState({ showStatus: 2 })}\n//           disabled={!role._id}\n//         >\n//           设置角色权限\n//         </Button>\n//       </span>\n//     );\n//     // console.log(roles)\n//     // console.log(this.columns)\n//     return (\n//       <Card title={title}>\n//         <Table\n//           rowKey=\"_id\"\n//           pagination={{\n//             pageSize: PAGE_SIZE,\n//             // , total: 50\n//           }}\n//           dataSource={roles}\n//           columns={this.columns}\n//           loading={this.state.loading}\n//           rowSelection={{ type: \"radio\", selectedRowKeys: [role._id],onSelect:(role)=>{\n//             this.setState({role:role})} \n//           }} //设置单选\n//           onRow={(role) => {\n//             return {\n//               onSelect:(event) => {\n//                 this.setState({ role });\n//               },\n//               onClick: (event) => {\n//                 this.setState({ role });\n//               }, // 点击行\n//               onDoubleClick: (event) => {},\n//               onContextMenu: (event) => {},\n//               onMouseEnter: (event) => {}, // 鼠标移入行\n//               onMouseLeave: (event) => {},\n//             };\n//           }}\n//           bordered\n//         />\n//         <Modal\n//           title=\"添加角色\"\n//           visible={showStatus === 1}\n//           onOk={this.addRole}\n//           onCancel={this.handleCancel}\n//           destroyOnClose={true}\n//         >\n//           <AddForm\n//             categoryName\n//             setInput={(input) => {\n//               this.input = input;\n//             }}\n//           />\n//         </Modal>\n//         <Modal\n//           title=\"设置角色权限\"\n//           visible={showStatus === 2}\n//           onOk={this.setRole}\n//           onCancel={this.handleCancel}\n//           destroyOnClose={true}\n//         >\n//           <SetTree role={role} ref={this.auth}/>\n//         </Modal>\n//       </Card>\n//     );\n//   }\n// }\nexport default class Role extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      fetch(\"/user/user/get\" + this.state.username).then(response => response.json()).then(jsonData => {\n        this.saveUsers();\n        this.setState({\n          phone: jsonData[0][\"phone\"],\n          email: jsonData[0][\"email\"],\n          address: jsonData[0][\"address\"],\n          emergencyContact: jsonData[0][\"emergencyContact\"]\n        });\n      }).catch(error => {\n        console.error(error);\n      });\n    };\n\n    this.onFinish = async values => {\n      //console.log(\"Received values of form: \", values);\n      //\n      // console.log('this----',this)\n      const {\n        username,\n        password\n      } = values;\n\n      try {} catch (error) {}\n    };\n\n    this.saveUsers = async () => {\n      console.log(this.state.test);\n      const params = {\n        id: 'admin',\n        name: '用户'\n      };\n      const result = await reqContact(\"abc\", \"mytest1\", \"mytest2\");\n\n      if (true) {\n        const users = result;\n        console.log(result);\n        console.log(users); // this.initRoles(roles);\n\n        this.setState({\n          users\n        });\n      } else {// message.error(\"failsed\");\n      }\n    };\n\n    this.state = {\n      user: {\n        username: \"tester\",\n        phone: \"0000000000\",\n        email: \"email@email.com\",\n        address: \"123 Sesame Street\",\n        emergencyContact: [{\n          name: \"John Doe\",\n          phone: \"1111111111\"\n        }, {\n          name: \"First M. Last\",\n          phone: \"0123456789\"\n        }]\n      },\n      test: {\n        username: \"tester\",\n        phone: \"0000000000\"\n      },\n      errorMessage: \"\"\n    }; // this.buttonClick = this.buttonClick.bind(this)\n  }\n\n  UNSAFE_componentWillMount() {\n    this.saveUsers();\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // <div>\n      //   <div>\n      //     <h3>Contact</h3>\n      //     <input type = 'text' placeholder='phone' value = {this.state.user.phone} onChange={(e) => {}}/><br/>\n      //     <input type = 'text' placeholder='email' value = {this.state.user.email} onChange={(e) => {}}/><br/>\n      //     <input type = 'text' placeholder='address' value = {this.state.user.address} onChange={(e) => {}}/><br/>\n      //   </div>\n      //   <div>\n      //     {this.state.user.emergencyContact.map((contact, index) =>\n      //     <div>\n      //       <h3>Emergency Contact {index + 1}</h3>\n      //       <input type = 'text' placeholder='First Name, Last Name' value = {contact.name} onChange={(e) => {this.setState(prevState => {let s = Object.assign({}, prevState); s.emergencyContact[index].name = e.target.value; return {s};})}}/><br/>\n      //       <input type = 'text' placeholder='phone' value = {contact.phone} onChange={(e) => {this.setState(prevState => {let s = Object.assign({}, prevState); s.emergencyContact[index].phone = e.target.value; return {s};})}}/><br/>\n      //     </div>\n      //     )}\n      //   </div>\n      //   <button onClick={this.saveUsers}>Save</button>\n      //   <p>{this.state.errorMessage}</p>\n      // </div>\n      _jsxDEV(_Form, {\n        name: \"validate_other\",\n        onFinish: this.onFinish,\n        initialValues: {\n          'input-number': 3,\n          'checkbox-group': ['A', 'B'],\n          rate: 3.5\n        },\n        children: [/*#__PURE__*/_jsxDEV(_Form.Item, {\n          label: \"name\",\n          name: \"name\",\n          children: /*#__PURE__*/_jsxDEV(_Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n          label: \"email\",\n          name: \"email\",\n          children: /*#__PURE__*/_jsxDEV(_Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n          label: \"address\",\n          name: \"address\",\n          children: /*#__PURE__*/_jsxDEV(_Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n}","map":{"version":3,"sources":["/Users/danyangliu/Downloads/React-admin/src/pages/role/index.jsx"],"names":["React","Component","PAGE_SIZE","reqContact","AddForm","SetTree","get","memoryUtils","formateDate","storageUtils","ReactDOM","Role","constructor","props","componentDidMount","fetch","state","username","then","response","json","jsonData","saveUsers","setState","phone","email","address","emergencyContact","catch","error","console","onFinish","values","password","log","test","params","id","name","result","users","user","errorMessage","UNSAFE_componentWillMount","render","rate"],"mappings":"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","sourcesContent":["import React, { Component, } from \"react\";\n// import { Card, Button, Table, Modal, message } from \"antd\";\nimport { PAGE_SIZE } from \"../../utils/constant\";\nimport { reqContact} from \"../../api\";\nimport AddForm from \"./add-form.jsx\";\nimport SetTree from \"./setTree\";\nimport { get } from \"store\";\nimport memoryUtils from '../../utils/memoryUtils'\nimport {formateDate} from '../../utils/dataUtils'\nimport storageUtils from \"../../utils/storageUtils\";\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\n\nimport { Form, Input, InputNumber, Button } from 'antd';\n/* 角色路由 */\n// export default class Role extends Component {\n//   state = {\n//     loading: false,\n//     roles: [],\n//     role: {},\n//     showStatus: 0,\n//   };\n//   constructor(props){\n//       super(props)\n//       this.auth= React.createRef()\n//   }\n//   getRoles = async () => {\n//     const result = await reqRoleList();\n//     if (result.status === 0) {\n//       const roles = result.data;\n//       this.setState({\n//         roles,\n//       });\n//     }\n//   };\n//   initColumn = () => {\n//     this.columns = [\n//       {\n//         title: \"角色名称\",\n//         dataIndex: \"name\",\n//       },\n//       {\n//         title: \"创建时间\",\n//         dataIndex: \"create_time\",\n//         render:(create_time)=>formateDate(create_time)\n//       },\n//       {\n//         title: \"授权时间\",\n//         dataIndex: \"auth_time\",\n//         render:(auth_time)=>formateDate(auth_time)\n//       },\n//       {\n//         title: \"授权人\",\n//         dataIndex: \"auth_name\",\n//       },\n//     ];\n//   };\n//   handleCancel = () => {\n//     this.setState({ showStatus: 0 });\n//   };\n//   addRole = async () => {\n//     const result = await reqAddRole(this.input.props.value);\n//     if (result.status === 0) {\n//       message.success(\"添加角色成功\");\n//       // this.getRoles()\n//       // 可以不请求直接添加到roles列表\n//       const role = result.data;\n//       // const roles =[...this.state.roles]\n//       // roles.push(role)\n//       // this.setState({roles:roles})\n//       this.setState((state) => ({\n//         roles: [...state.roles, role],\n//       }));\n//     } else {\n//       message.error(\"添加角色失败\");\n//     }\n//     this.setState({ showStatus: 0 });\n//   };\n//   setRole = async() => {\n//     //   console.log('select',select)\n//      const menus =  this.auth.current.getMenus()\n//      const role = this.state.role\n//      role.menus=menus\n//      role.auth_time = Date.now()\n//      role.auth_name = memoryUtils.user.username\n//     //  console.log(role)\n//      const result = await reqUpdateRole(role)\n//      if(result.status===0){\n//          message.success('设置权限成功')\n//          //如果更新的是自己角色权限,强制退出\n//         if(memoryUtils.user.username!=='admin'&&role._id===memoryUtils.user.role_id){\n//           memoryUtils.user={}\n//           storageUtils.deleteUser()\n//           this.props.history.replace('./login')\n//           message.info('权限已更改,请重新登录')\n//         }\n//      }else{\n//          message.error('设置权限失败')\n//      }\n//     this.setState({ showStatus: 0 });\n//   };\n//   componentDidMount() {\n//     this.getRoles();\n//   }\n//   UNSAFE_componentWillMount() {\n//     this.initColumn();\n//   }\n//   render() {\n//     const { roles, role, showStatus } = this.state;\n//     // const {username, totalHours, comments, approvalStatus,submissionStatus}=this.props.location.state.user\n//     const title = (\n//       <span>\n//         <Button type=\"primary\" onClick={() => this.setState({ showStatus: 1 })}>\n//           创建角色\n//         </Button>\n//         <Button\n//           type=\"primary\"\n//           onClick={() => this.setState({ showStatus: 2 })}\n//           disabled={!role._id}\n//         >\n//           设置角色权限\n//         </Button>\n//       </span>\n//     );\n\n//     // console.log(roles)\n//     // console.log(this.columns)\n//     return (\n//       <Card title={title}>\n//         <Table\n//           rowKey=\"_id\"\n//           pagination={{\n//             pageSize: PAGE_SIZE,\n//             // , total: 50\n//           }}\n//           dataSource={roles}\n//           columns={this.columns}\n//           loading={this.state.loading}\n//           rowSelection={{ type: \"radio\", selectedRowKeys: [role._id],onSelect:(role)=>{\n//             this.setState({role:role})} \n//           }} //设置单选\n//           onRow={(role) => {\n//             return {\n//               onSelect:(event) => {\n//                 this.setState({ role });\n//               },\n//               onClick: (event) => {\n//                 this.setState({ role });\n//               }, // 点击行\n//               onDoubleClick: (event) => {},\n//               onContextMenu: (event) => {},\n//               onMouseEnter: (event) => {}, // 鼠标移入行\n//               onMouseLeave: (event) => {},\n//             };\n//           }}\n//           bordered\n//         />\n//         <Modal\n//           title=\"添加角色\"\n//           visible={showStatus === 1}\n//           onOk={this.addRole}\n//           onCancel={this.handleCancel}\n//           destroyOnClose={true}\n//         >\n//           <AddForm\n//             categoryName\n//             setInput={(input) => {\n//               this.input = input;\n//             }}\n//           />\n//         </Modal>\n//         <Modal\n//           title=\"设置角色权限\"\n//           visible={showStatus === 2}\n//           onOk={this.setRole}\n//           onCancel={this.handleCancel}\n//           destroyOnClose={true}\n//         >\n//           <SetTree role={role} ref={this.auth}/>\n//         </Modal>\n//       </Card>\n//     );\n//   }\n// }\nexport default class Role extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      user:{\n        username: \"tester\",\n        phone: \"0000000000\",\n        email: \"email@email.com\",\n        address: \"123 Sesame Street\",\n        emergencyContact: [\n          {\n            name: \"John Doe\", \n            phone: \"1111111111\"\n          },\n          {\n            name: \"First M. Last\",\n            phone: \"0123456789\"\n          }\n        ]\n      },\n      test:{\n        username: \"tester\",\n        phone: \"0000000000\"\n    \n      },\n      errorMessage:\"\"\n    }\n    // this.buttonClick = this.buttonClick.bind(this)\n  }\n  UNSAFE_componentWillMount() {\n    this.saveUsers();\n  }\n\n  componentDidMount = () => {\n    fetch(\"/user/user/get\" + this.state.username)\n        .then(response => response.json())\n        .then(jsonData => {\n          this.saveUsers();\n            \n            this.setState({\n                phone: jsonData[0][\"phone\"],\n                email: jsonData[0][\"email\"],\n                address: jsonData[0][\"address\"],\n                emergencyContact: jsonData[0][\"emergencyContact\"]\n            })\n        })\n        .catch((error) => {\n            console.error(error);\n        })\n  }\n\n  onFinish = async (values) => {\n    //console.log(\"Received values of form: \", values);\n    //\n    // console.log('this----',this)\n    const { username, password } = values;\n    \n    try {\n      \n\n   \n\n      \n    } catch (error) {\n   \n    }\n  };\n\n\n\n  saveUsers = async () => {\n    console.log(this.state.test);\n    const params = { id: 'admin', name: '用户' }\n    \n   \n\n    \n    \n    const result = await reqContact(\"abc\",\"mytest1\", \"mytest2\");\n    \n\n    if (true) {\n      const  users  = result;\n      console.log(result)\n      console.log(users)\n      // this.initRoles(roles);\n      this.setState({ users});\n    } else {\n      // message.error(\"failsed\");\n    }\n  };\n  \n\n  render() {\n    \n    return (\n\n      // <div>\n        \n      //   <div>\n      //     <h3>Contact</h3>\n\n      //     <input type = 'text' placeholder='phone' value = {this.state.user.phone} onChange={(e) => {}}/><br/>\n      //     <input type = 'text' placeholder='email' value = {this.state.user.email} onChange={(e) => {}}/><br/>\n      //     <input type = 'text' placeholder='address' value = {this.state.user.address} onChange={(e) => {}}/><br/>\n      //   </div>\n      //   <div>\n      //     {this.state.user.emergencyContact.map((contact, index) =>\n      //     <div>\n      //       <h3>Emergency Contact {index + 1}</h3>\n      //       <input type = 'text' placeholder='First Name, Last Name' value = {contact.name} onChange={(e) => {this.setState(prevState => {let s = Object.assign({}, prevState); s.emergencyContact[index].name = e.target.value; return {s};})}}/><br/>\n      //       <input type = 'text' placeholder='phone' value = {contact.phone} onChange={(e) => {this.setState(prevState => {let s = Object.assign({}, prevState); s.emergencyContact[index].phone = e.target.value; return {s};})}}/><br/>\n      //     </div>\n      //     )}\n      //   </div>\n      //   <button onClick={this.saveUsers}>Save</button>\n      //   <p>{this.state.errorMessage}</p>\n      // </div>\n      <Form\n      name=\"validate_other\"\n      onFinish={this.onFinish}\n      initialValues={{\n        'input-number': 3,\n        'checkbox-group': ['A', 'B'],\n        rate: 3.5,\n      }}\n    >\n      <Form.Item\n        label=\"name\"\n        name=\"name\"      \n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        label=\"email\"\n        name=\"email\"      \n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        label=\"address\"\n        name=\"address\"      \n      >\n        <Input />\n      </Form.Item>\n\n    </Form>\n\n\n    )\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}