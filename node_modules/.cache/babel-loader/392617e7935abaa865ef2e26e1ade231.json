{"ast":null,"code":"import \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/message/style/css\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"/Users/danyangliu/Downloads/React-admin/src/pages/login/index.jsx\";\nimport React, { Component } from \"react\";\nimport logo from \"../../assets/image/logo.png\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { Redirect } from 'react-router-dom';\nimport \"./index.less\";\nimport { reqLogin } from \"../../api/index.js\";\nimport memoryUtils from \"../../utils/memoryUtils\";\nimport storageUtils from \"../../utils/storageUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Login extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onFinish = async values => {\n      //console.log(\"Received values of form: \", values);\n      //\n      // console.log('this----',this)\n      const {\n        username,\n        password\n      } = values;\n\n      try {\n        const response = await reqLogin(username, password); // .then(response=>{\n        //   console.log('成功了',response.data)\n        // }).catch(error=>{\n        //   console.log('失败了',error.message)}\n        // );\n\n        console.log(\"请求成功\", response);\n        const result = response; //{state:0,data:user} {state:1,msg:'xxxx'}\n\n        if (result.userID === \"123\") {\n          //登陆成功\n          _message.success(\"login sucessful\"); //跳转到管理界面\n\n\n          const user = result;\n          console.log(result);\n          memoryUtils.user = user;\n          storageUtils.saveUser(user); // console.log(this);\n\n          this.props.history.push(\"/user\");\n        } else {\n          // 登录失败.提示错误信息\n          _message.error(\"wrong username/password\");\n        }\n      } catch (error) {//console.log(\"请求出错\", error);\n      }\n    };\n\n    this.onFinishFailed = (values, errorFields, outOfDate) => {\n      //console.log(\"校验失败\");\n      values.errorFields.map(x => {\n        return; //console.log(x.errors);\n      }); // //console.log('value------',values)\n    };\n\n    this.validatePwd = (rule, value, callback) => {\n      // //console.log(value)\n      if (!value) {\n        callback(\"密码必须输入\");\n      } else if (value.length < 4) {\n        callback(\"密码不能小于4\");\n      } else if (value.length > 12) {\n        callback(\"密码不能大于12\");\n      } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\n        callback(\"密码必须由大小写字母或者数字组成\");\n      } else {\n        callback(); //验证通过\n      }\n    };\n  }\n\n  render() {\n    //如果用户已经登陆,自动跳转到管理页面\n    const user = memoryUtils.user;\n\n    if (user) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"login-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"React\\u9805\\u76EE:\\u5F8C\\u53F0\\u7BA1\\u7406\\u7CFB\\u7D71\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"login-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"User Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Form, {\n          name: \"normal_login\",\n          className: \"login-form\",\n          initialValues: {\n            remember: true\n          },\n          onFinish: this.onFinish,\n          onFinishFailed: this.onFinishFailed,\n          children: [/*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"username\",\n            initialValue: \"admin\",\n            rules: [{\n              required: true,\n              message: \"请输入用户名!\"\n            }, {\n              min: 3,\n              message: \"最小5位\"\n            }, {\n              max: 15,\n              message: \"最大10位\"\n            }, {\n              pattern: /^[a-zA-Z0-9_]+$/,\n              message: \"必须是英文,数字或下划线组成\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(_Input, {\n              prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {\n                className: \"site-form-item-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 25\n              }, this),\n              placeholder: \"\\u7528\\u6237\\u540D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"password\",\n            initialValue: \"admin\",\n            rules: [{\n              required: true,\n              message: \"请输入密码!\"\n            }, {\n              validator: this.validatePwd\n            }],\n            children: /*#__PURE__*/_jsxDEV(_Input, {\n              prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {\n                className: \"site-form-item-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 25\n              }, this),\n              type: \"password\",\n              placeholder: \"\\u5BC6\\u7801\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(_Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              className: \"login-form-button\",\n              style: {\n                width: \"100%\"\n              },\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/danyangliu/Downloads/React-admin/src/pages/login/index.jsx"],"names":["React","Component","logo","UserOutlined","LockOutlined","Redirect","reqLogin","memoryUtils","storageUtils","Login","onFinish","values","username","password","response","console","log","result","userID","success","user","saveUser","props","history","push","error","onFinishFailed","errorFields","outOfDate","map","x","validatePwd","rule","value","callback","length","test","render","remember","required","message","min","max","pattern","validator","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport logo from \"../../assets/image/logo.png\";\nimport { Form, Input, Button, message } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport {Redirect} from 'react-router-dom'\nimport \"./index.less\";\nimport { reqLogin } from \"../../api/index.js\";\nimport memoryUtils from \"../../utils/memoryUtils\";\nimport storageUtils from \"../../utils/storageUtils\";\n\nexport default class Login extends Component {\n  onFinish = async (values) => {\n    //console.log(\"Received values of form: \", values);\n    //\n    // console.log('this----',this)\n    const { username, password } = values;\n    try {\n      const response = await reqLogin(username, password);\n      // .then(response=>{\n      //   console.log('成功了',response.data)\n      // }).catch(error=>{\n      //   console.log('失败了',error.message)}\n      // );\n      console.log(\"请求成功\", response);\n      const result = response; //{state:0,data:user} {state:1,msg:'xxxx'}\n      if (result.userID === \"123\") {\n        //登陆成功\n        message.success(\"login sucessful\");\n        //跳转到管理界面\n        const user = result;\n        console.log(result)\n        \n       \n       \n        memoryUtils.user = user;\n        storageUtils.saveUser(user);\n        // console.log(this);\n        this.props.history.push(\"/user\");\n      } else {\n        // 登录失败.提示错误信息\n        message.error(\"wrong username/password\");\n      }\n    } catch (error) {\n      //console.log(\"请求出错\", error);\n    }\n  };\n  onFinishFailed = (values, errorFields, outOfDate) => {\n    //console.log(\"校验失败\");\n    values.errorFields.map((x) => {\n      return //console.log(x.errors);\n    });\n    // //console.log('value------',values)\n  };\n  validatePwd = (rule, value, callback) => {\n    // //console.log(value)\n    if (!value) {\n      callback(\"密码必须输入\");\n    } else if (value.length < 4) {\n      callback(\"密码不能小于4\");\n    } else if (value.length > 12) {\n      callback(\"密码不能大于12\");\n    } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\n      callback(\"密码必须由大小写字母或者数字组成\");\n    } else {\n      callback(); //验证通过\n    }\n  };\n  render() {\n    //如果用户已经登陆,自动跳转到管理页面\n    const user = memoryUtils.user;\n    if (user) {\n      \n      \n      return <Redirect to=\"/user\" />;\n    }\n    return (\n      <div className=\"login\">\n        <header className=\"login-header\">\n          {/* <img src={logo} alt=\"logo\" /> */}\n          <h1>React項目:後台管理系統</h1>\n        </header>\n        <section className=\"login-content\">\n          <h2>User Login</h2>\n\n          <Form\n            name=\"normal_login\"\n            className=\"login-form\"\n            initialValues={{\n              remember: true,\n            }}\n            onFinish={this.onFinish}\n            onFinishFailed={this.onFinishFailed}\n          >\n            <Form.Item\n              name=\"username\"\n              initialValue=\"admin\"\n              rules={[\n                {\n                  required: true,\n                  message: \"请输入用户名!\",\n                },\n                {\n                  min: 3,\n                  message: \"最小5位\",\n                },\n                {\n                  max: 15,\n                  message: \"最大10位\",\n                },\n                {\n                  pattern: /^[a-zA-Z0-9_]+$/,\n                  message: \"必须是英文,数字或下划线组成\",\n                },\n              ]}\n            >\n              <Input\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"用户名\"\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"password\"\n              initialValue=\"admin\"\n              rules={[\n                {\n                  required: true,\n                  message: \"请输入密码!\",\n                },\n                {\n                  validator: this.validatePwd,\n                },\n              ]}\n            >\n              <Input\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                type=\"password\"\n                placeholder=\"密码\"\n              />\n            </Form.Item>\n            {/* <Form.Item>\n          <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n            <Checkbox>Remember me</Checkbox>\n          </Form.Item>\n\n          <a className=\"login-form-forgot\" href=\"\">\n            Forgot password\n          </a>\n        </Form.Item> */}\n\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-form-button\" \n                style={{width:\"100%\" }}             \n              >\n                Login\n              </Button>\n              {/* Or <a href=\"\">register now!</a> */}\n            </Form.Item>\n          </Form>\n        </section>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}