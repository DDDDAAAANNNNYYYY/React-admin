[{"/Users/danyangliu/Downloads/React-admin/src/index.js":"1","/Users/danyangliu/Downloads/React-admin/src/App.js":"2","/Users/danyangliu/Downloads/React-admin/src/serviceWorker.js":"3","/Users/danyangliu/Downloads/React-admin/src/utils/storageUtils.js":"4","/Users/danyangliu/Downloads/React-admin/src/utils/memoryUtils.js":"5","/Users/danyangliu/Downloads/React-admin/src/pages/admin/index.jsx":"6","/Users/danyangliu/Downloads/React-admin/src/pages/login/index.jsx":"7","/Users/danyangliu/Downloads/React-admin/src/api/index.js":"8","/Users/danyangliu/Downloads/React-admin/src/api/ajax.jsx":"9","/Users/danyangliu/Downloads/React-admin/src/pages/category/index.jsx":"10","/Users/danyangliu/Downloads/React-admin/src/pages/home/index.jsx":"11","/Users/danyangliu/Downloads/React-admin/src/pages/role/index.jsx":"12","/Users/danyangliu/Downloads/React-admin/src/pages/product/index.jsx":"13","/Users/danyangliu/Downloads/React-admin/src/pages/users/index.jsx":"14","/Users/danyangliu/Downloads/React-admin/src/component/left-nav/index.jsx":"15","/Users/danyangliu/Downloads/React-admin/src/component/header/index.jsx":"16","/Users/danyangliu/Downloads/React-admin/src/pages/role/add-form.jsx":"17","/Users/danyangliu/Downloads/React-admin/src/utils/constant.js":"18","/Users/danyangliu/Downloads/React-admin/src/utils/dataUtils.js":"19","/Users/danyangliu/Downloads/React-admin/src/config/menuConfig.js":"20","/Users/danyangliu/Downloads/React-admin/src/pages/category/updateform.jsx":"21","/Users/danyangliu/Downloads/React-admin/src/pages/category/addform.jsx":"22","/Users/danyangliu/Downloads/React-admin/src/pages/role/setTree.jsx":"23","/Users/danyangliu/Downloads/React-admin/src/pages/product/add-update.jsx":"24","/Users/danyangliu/Downloads/React-admin/src/pages/product/home.jsx":"25","/Users/danyangliu/Downloads/React-admin/src/pages/product/detail.jsx":"26","/Users/danyangliu/Downloads/React-admin/src/pages/users/user-form.jsx":"27","/Users/danyangliu/Downloads/React-admin/src/component/link-button/index.jsx":"28","/Users/danyangliu/Downloads/React-admin/src/pages/product/rich-text-editor.jsx":"29","/Users/danyangliu/Downloads/React-admin/src/pages/product/pictures-wall.jsx":"30"},{"size":634,"mtime":1616765554000,"results":"31","hashOfConfig":"32"},{"size":634,"mtime":1616765554000,"results":"33","hashOfConfig":"32"},{"size":4951,"mtime":1616765554000,"results":"34","hashOfConfig":"32"},{"size":502,"mtime":1618343645707,"results":"35","hashOfConfig":"32"},{"size":137,"mtime":1616765554000,"results":"36","hashOfConfig":"32"},{"size":1773,"mtime":1618350701517,"results":"37","hashOfConfig":"32"},{"size":4939,"mtime":1618406553521,"results":"38","hashOfConfig":"32"},{"size":3539,"mtime":1618413479978,"results":"39","hashOfConfig":"32"},{"size":1162,"mtime":1618405315677,"results":"40","hashOfConfig":"32"},{"size":6764,"mtime":1616765554000,"results":"41","hashOfConfig":"32"},{"size":255,"mtime":1618328186321,"results":"42","hashOfConfig":"32"},{"size":5123,"mtime":1618293860937,"results":"43","hashOfConfig":"32"},{"size":625,"mtime":1616765554000,"results":"44","hashOfConfig":"32"},{"size":5655,"mtime":1618422387947,"results":"45","hashOfConfig":"32"},{"size":3735,"mtime":1618318475934,"results":"46","hashOfConfig":"32"},{"size":2673,"mtime":1618343750418,"results":"47","hashOfConfig":"32"},{"size":1092,"mtime":1616765554000,"results":"48","hashOfConfig":"32"},{"size":137,"mtime":1616765554000,"results":"49","hashOfConfig":"32"},{"size":244,"mtime":1618330358113,"results":"50","hashOfConfig":"32"},{"size":915,"mtime":1618328647803,"results":"51","hashOfConfig":"32"},{"size":819,"mtime":1616765554000,"results":"52","hashOfConfig":"32"},{"size":1203,"mtime":1616765554000,"results":"53","hashOfConfig":"32"},{"size":2008,"mtime":1616765554000,"results":"54","hashOfConfig":"32"},{"size":8172,"mtime":1616765554000,"results":"55","hashOfConfig":"32"},{"size":4560,"mtime":1616765554000,"results":"56","hashOfConfig":"32"},{"size":3140,"mtime":1618294310932,"results":"57","hashOfConfig":"32"},{"size":2591,"mtime":1616765554000,"results":"58","hashOfConfig":"32"},{"size":235,"mtime":1616765554000,"results":"59","hashOfConfig":"32"},{"size":2871,"mtime":1616765554000,"results":"60","hashOfConfig":"32"},{"size":3561,"mtime":1616765554000,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1qvhodp",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/Users/danyangliu/Downloads/React-admin/src/index.js",[],["133","134"],"/Users/danyangliu/Downloads/React-admin/src/App.js",[],"/Users/danyangliu/Downloads/React-admin/src/serviceWorker.js",[],"/Users/danyangliu/Downloads/React-admin/src/utils/storageUtils.js",[],"/Users/danyangliu/Downloads/React-admin/src/utils/memoryUtils.js",[],"/Users/danyangliu/Downloads/React-admin/src/pages/admin/index.jsx",["135"],"import React, { Component } from \"react\";\nimport { Redirect, Switch, Route } from \"react-router-dom\";\nimport { Layout } from \"antd\";\n\nimport memoryUtils from \"../../utils/memoryUtils\";\nimport LeftNav from \"../../component/left-nav\";\nimport Header from \"../../component/header\";\nimport Home from \"../home\";\nimport Category from \"../category\";\nimport Role from \"../role\";\n\nimport Users from \"../users\";\nimport Product from \"../product\";\nconst { Footer, Sider, Content } = Layout;\n\nexport default class Admin extends Component {\n  render() {\n    const user = localStorage.getItem(\"user_key\");\n    // 如果内存中没有存储user ==>当前没登陆\n    if (!user ) {\n      \n      //自动跳转到登陆\n      return <Redirect to=\"/login\" />;\n    }\n    return (\n      <>\n        <Layout style={{ height: \"100%\", width: \"100%\" }}>\n          <Sider style={{\n        overflow: 'auto',\n        height: '100vh',\n        position: 'fixed',\n        left: 0,\n      }}>\n        {/* 设置固定侧边栏 */}\n            <LeftNav />\n          </Sider>\n          <Layout style={{ marginLeft: 200 }}>\n            <Header>Header</Header>\n            <Content style={{ margin:20,backgroundColor: \"white\"}}>\n              <Switch>\n                <Route path=\"/home\" component={Home} />\n                <Route path=\"/category\" component={Category} />\n                <Route path=\"/product\" component={Product} />\n                <Route path=\"/role\" component={Role} />\n                <Route path=\"/user\" component={Users} />\n               \n                <Redirect to=\"/user\" />\n              </Switch>\n            </Content>\n            <Footer style={{ textAlign: \"center\" }}>\n              \n            </Footer>\n          </Layout>\n        </Layout>\n        \n      </>\n    );\n  }\n}\n","/Users/danyangliu/Downloads/React-admin/src/pages/login/index.jsx",["136","137"],"/Users/danyangliu/Downloads/React-admin/src/api/index.js",[],"/Users/danyangliu/Downloads/React-admin/src/api/ajax.jsx",[],"/Users/danyangliu/Downloads/React-admin/src/pages/category/index.jsx",[],"/Users/danyangliu/Downloads/React-admin/src/pages/home/index.jsx",[],"/Users/danyangliu/Downloads/React-admin/src/pages/role/index.jsx",["138"],"import React, { Component, } from \"react\";\nimport { Card, Button, Table, Modal, message } from \"antd\";\nimport { PAGE_SIZE } from \"../../utils/constant\";\nimport { reqRoleList, reqAddRole ,reqUpdateRole} from \"../../api\";\nimport AddForm from \"./add-form.jsx\";\nimport SetTree from \"./setTree\";\nimport { get } from \"store\";\nimport memoryUtils from '../../utils/memoryUtils'\nimport {formateDate} from '../../utils/dataUtils'\nimport storageUtils from \"../../utils/storageUtils\";\n/* 角色路由 */\nexport default class Role extends Component {\n  state = {\n    loading: false,\n    roles: [],\n    role: {},\n    showStatus: 0,\n  };\n  constructor(props){\n      super(props)\n      this.auth= React.createRef()\n  }\n  getRoles = async () => {\n    const result = await reqRoleList();\n    if (result.status === 0) {\n      const roles = result.data;\n      this.setState({\n        roles,\n      });\n    }\n  };\n  initColumn = () => {\n    this.columns = [\n      {\n        title: \"角色名称\",\n        dataIndex: \"name\",\n      },\n      {\n        title: \"创建时间\",\n        dataIndex: \"create_time\",\n        render:(create_time)=>formateDate(create_time)\n      },\n      {\n        title: \"授权时间\",\n        dataIndex: \"auth_time\",\n        render:(auth_time)=>formateDate(auth_time)\n      },\n      {\n        title: \"授权人\",\n        dataIndex: \"auth_name\",\n      },\n    ];\n  };\n  handleCancel = () => {\n    this.setState({ showStatus: 0 });\n  };\n  addRole = async () => {\n    const result = await reqAddRole(this.input.props.value);\n    if (result.status === 0) {\n      message.success(\"添加角色成功\");\n      // this.getRoles()\n      // 可以不请求直接添加到roles列表\n      const role = result.data;\n      // const roles =[...this.state.roles]\n      // roles.push(role)\n      // this.setState({roles:roles})\n      this.setState((state) => ({\n        roles: [...state.roles, role],\n      }));\n    } else {\n      message.error(\"添加角色失败\");\n    }\n    this.setState({ showStatus: 0 });\n  };\n  setRole = async() => {\n    //   console.log('select',select)\n     const menus =  this.auth.current.getMenus()\n     const role = this.state.role\n     role.menus=menus\n     role.auth_time = Date.now()\n     role.auth_name = memoryUtils.user.username\n    //  console.log(role)\n     const result = await reqUpdateRole(role)\n     if(result.status===0){\n         message.success('设置权限成功')\n         //如果更新的是自己角色权限,强制退出\n        if(memoryUtils.user.username!=='admin'&&role._id===memoryUtils.user.role_id){\n          memoryUtils.user={}\n          storageUtils.deleteUser()\n          this.props.history.replace('./login')\n          message.info('权限已更改,请重新登录')\n        }\n     }else{\n         message.error('设置权限失败')\n     }\n    this.setState({ showStatus: 0 });\n  };\n  componentDidMount() {\n    this.getRoles();\n  }\n  UNSAFE_componentWillMount() {\n    this.initColumn();\n  }\n  render() {\n    const { roles, role, showStatus } = this.state;\n    // const {username, totalHours, comments, approvalStatus,submissionStatus}=this.props.location.state.user\n    const title = (\n      <span>\n        <Button type=\"primary\" onClick={() => this.setState({ showStatus: 1 })}>\n          创建角色\n        </Button>\n        <Button\n          type=\"primary\"\n          onClick={() => this.setState({ showStatus: 2 })}\n          disabled={!role._id}\n        >\n          设置角色权限\n        </Button>\n      </span>\n    );\n\n    // console.log(roles)\n    // console.log(this.columns)\n    return (\n      <Card title={title}>\n        <Table\n          rowKey=\"_id\"\n          pagination={{\n            pageSize: PAGE_SIZE,\n            // , total: 50\n          }}\n          dataSource={roles}\n          columns={this.columns}\n          loading={this.state.loading}\n          rowSelection={{ type: \"radio\", selectedRowKeys: [role._id],onSelect:(role)=>{\n            this.setState({role:role})} \n          }} //设置单选\n          onRow={(role) => {\n            return {\n              onSelect:(event) => {\n                this.setState({ role });\n              },\n              onClick: (event) => {\n                this.setState({ role });\n              }, // 点击行\n              onDoubleClick: (event) => {},\n              onContextMenu: (event) => {},\n              onMouseEnter: (event) => {}, // 鼠标移入行\n              onMouseLeave: (event) => {},\n            };\n          }}\n          bordered\n        />\n        <Modal\n          title=\"添加角色\"\n          visible={showStatus === 1}\n          onOk={this.addRole}\n          onCancel={this.handleCancel}\n          destroyOnClose={true}\n        >\n          <AddForm\n            categoryName\n            setInput={(input) => {\n              this.input = input;\n            }}\n          />\n        </Modal>\n        <Modal\n          title=\"设置角色权限\"\n          visible={showStatus === 2}\n          onOk={this.setRole}\n          onCancel={this.handleCancel}\n          destroyOnClose={true}\n        >\n          <SetTree role={role} ref={this.auth}/>\n        </Modal>\n      </Card>\n    );\n  }\n}\n","/Users/danyangliu/Downloads/React-admin/src/pages/product/index.jsx",[],"/Users/danyangliu/Downloads/React-admin/src/pages/users/index.jsx",["139","140","141","142","143","144","145","146","147"],"/Users/danyangliu/Downloads/React-admin/src/component/left-nav/index.jsx",["148","149","150"],"import React, { Component } from \"react\";\nimport \"./index.less\";\nimport { Menu } from \"antd\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport logo from \"../../assets/image/logo.png\";\nimport menuList from \"../../config/menuConfig\";\nimport memoryUtils from \"../../utils/memoryUtils\";\n/* \n左侧导航的组件\n */\nconst { SubMenu } = Menu;\nclass LeftNav extends Component {\n  // state = {\n  //   current: \"1\",\n  // };\n  getMenuNodes_map = (menuList) => {\n    // map加递归\n    return menuList.map((item) => {\n      /* \n      title\n      key\n      icon\n      chilren 可能有 */\n      if (!item.children) {\n        return (\n          <Menu.Item key={item.key} icon={item.icon}>\n            <Link to={item.key}>{item.title}</Link>\n          </Menu.Item>\n        );\n      } else {\n        return (\n          <SubMenu key={item.key} icon={item.icon} title={item.title}>\n            {this.getMenuNodes(item.children)}\n          </SubMenu>\n        );\n      }\n    });\n  };\n  //查看item是否有授权\n  hasAuth = (item) =>{\n    const key = item.key\n    // const menus = memoryUtils.user.role.menus\n    // const username = memoryUtils.user.username\n    const menus = \"admin\"\n    const username = \"admin\"\n    // console.log(username)\n    /*\n    1.如果当前用户是admin,直接通过 \n    2.如果当前item是公开的\n    3.当前用户有此item的权限\n     */\n    if(username==='admin'||key==='./home'||menus.indexOf(key)!==-1){\n      return true\n    }else if(item.children){//有一个子item的权限,\n      return !!item.children.find(child =>menus.indexOf(child.key)!==-1)\n    }\n    return false\n  }\n  //改用reduce调用\n  getMenuNodes = (menuList) => {\n    const path = this.props.location.pathname;\n    return menuList.reduce((pre, item) => {\n      //查看当前用户是否有item对应的权限\n      if (this.hasAuth(item)) {\n        //像pre中添加《item》或者《submenu》\n        if (!item.children) {\n          pre.push(\n            <Menu.Item key={item.key} icon={item.icon}>\n              <Link to={item.key}>{item.title}</Link>\n            </Menu.Item>\n          );\n        } else {\n          const cItem = item.children.find(\n            (cItem) => 0 === path.indexOf(cItem.key)\n          );\n          //如果存在，说明当前item的子列表需要打开\n          if (cItem) {\n            this.openkey = item.key;\n          }\n\n          pre.push(\n            <SubMenu key={item.key} icon={item.icon} title={item.title}>\n              {this.getMenuNodes(item.children)}\n            </SubMenu>\n          );\n        }\n      }\n      return pre; //记住return pre\n    }, []);\n  };\n  handleClick = (e) => {\n    // console.log(\"click \", e);\n    this.setState({\n      current: e.key,\n    });\n  };\n  //在第一次render之前执行一次，为第一次render准备数据（必须同步）\n  UNSAFE_componentWillMount() {\n    this.menuNodes = this.getMenuNodes(menuList);\n  }\n  render() {\n    // console.log(this)\n    let path = this.props.location.pathname;\n    // console.log(path)\n    if (path.indexOf(\"/product\") === 0) {\n      //当前请求的是商品或其子路由界面\n      path = \"/product\";\n    }\n    const openkey = this.openkey;\n    // this.setState({current:path})\n    return (\n      <div>\n        <Link to=\"/\" className=\"left-nav-header\">\n          {/* <img src={logo} alt=\"logo\" /> */}\n          <h1></h1>\n        </Link>\n\n        {/* <br />\n        <br /> */}\n        <Menu\n          theme=\"dark\"\n          onClick={this.handleClick}\n          style={{ width: 200 }}\n          defaultOpenKeys={[openkey]}\n          selectedKeys={[path]}\n          mode=\"inline\"\n        >\n          {this.menuNodes}\n        </Menu>\n      </div>\n    );\n  }\n}\nexport default withRouter(LeftNav);\n","/Users/danyangliu/Downloads/React-admin/src/component/header/index.jsx",[],"/Users/danyangliu/Downloads/React-admin/src/pages/role/add-form.jsx",["151"],"import React, { PureComponent } from \"react\";\nimport { Form, Input } from \"antd\";\nimport PropTypes from \"prop-types\";\n\nconst Item = Form.Item;\n// const Option = Select.Option;\nexport default class AddForm extends PureComponent {\n  static propTypes = {\n    setInput: PropTypes.func.isRequired,\n  };\n  render() {\n    // const { categorys } = this.props;\n    const formItemLayout = {\n        labelCol: { span: 4 }, //左侧label宽度\n        wrapperCol: { span: 10 }, //右侧包裹输入框宽度\n      };\n    return (\n      <Form >\n      {/* <Form onValuesChange={this.onFinish}> */}\n        <Item\n        {...formItemLayout}\n          name=\"input\"\n          label=\"角色名称\"\n          name=\"username\"\n          rules={[{ required: true, message: \"名称必须输入!\" }]}\n        >\n          <Input\n         \n            initialvalues=\"请输入角色名称\"\n            ref={(input) =>{ \n                this.props.setInput(input)\n            }}\n          ></Input>\n        </Item>\n        {/* <Item></Item><Input></Input>\n                <Input></Input> */}\n      </Form>\n    );\n  }\n}\n","/Users/danyangliu/Downloads/React-admin/src/utils/constant.js",[],"/Users/danyangliu/Downloads/React-admin/src/utils/dataUtils.js",[],"/Users/danyangliu/Downloads/React-admin/src/config/menuConfig.js",["152","153","154","155","156","157"],"import {HomeOutlined,AppstoreAddOutlined,BarsOutlined,ToolOutlined,UserOutlined,SafetyOutlined,AreaChartOutlined,BarChartOutlined,PieChartFilled,LineChartOutlined} from '@ant-design/icons';\n\nconst menuList = [\n  {\n    title: \"Home\", // 菜单标题名称\n    key: \"/home\", // 对应的 path\n    icon: <HomeOutlined/>, // 图标名称\n  },\n  {\n    title: \"Summary\",\n    key: \"/user\",\n    icon: <UserOutlined />,\n  },\n  {\n    title: \"TimeSheet\",\n    key: \"/product\",\n    icon: <AppstoreAddOutlined />,\n    // children: [\n    //   // 子菜单列表\n    //   {\n    //     title: \"品类管理\",\n    //     key: \"/category\",\n    //     icon: <BarsOutlined />,\n    //   },\n    //   {\n    //     title: \"商品管理\",\n    //     key: \"/product\",\n    //     icon: <ToolOutlined />,\n    //   },\n    // ],\n  },\n  \n  {\n    title: \"Profile\",\n    key: \"/role\",\n    icon: <SafetyOutlined />,\n  }\n  \n];\nexport default menuList;\n","/Users/danyangliu/Downloads/React-admin/src/pages/category/updateform.jsx",["158"],"import React, { Component } from 'react'\nimport {Form,Select,Input} from 'antd'\nimport PropTypes from 'prop-types'\n\nconst Item = Form.Item\nconst Option = Select.Option\nexport default class UpdateForm extends Component {\n    static propTypes = {\n        category:PropTypes.string.isRequired,\n        setForm:PropTypes.func.isRequired\n    }\n\n    render() {\n        const {category} = this.props\n        return (\n            <Form >\n                <Item   name=\"username\"   rules={[{ required: true, message: \"名称必须输入!\" }]}>\n                <Input     placeholder='请输入分类名称' initialValues={category}  ref={input =>this.props.setForm(input)}></Input>\n                </Item>\n                {/* <Item></Item><Input></Input>\n                <Input></Input> */}\n            </Form>\n        )\n    }\n}\n","/Users/danyangliu/Downloads/React-admin/src/pages/category/addform.jsx",["159"],"import React, { Component } from 'react'\nimport {Form,Select,Input} from 'antd'\nimport PropTypes from 'prop-types'\n\nconst Item = Form.Item\nconst Option = Select.Option\nexport default class AddForm extends Component {\n    static propTypes = {\n        categorys:PropTypes.array.isRequired,\n        setClasses:PropTypes.func.isRequired,\n        setInput:PropTypes.func.isRequired\n    }\n    render() {\n        const {categorys}= this.props\n        return (\n            \n            <Form onValuesChange={this.onFinish}>\n                <Item name='classer'>\n                <Select initialValues='0' ref={input =>this.props.setClasses(input)}>\n                    <Option value='0'>一级分类</Option>\n                   {categorys.map(c=><Option value={c._id}>{c.name}</Option>)}\n                </Select>\n                </Item>\n                <Item name='input' name=\"username\"   rules={[{ required: true, message: \"名称必须输入!\" }]}>\n                <Input initialValues='请输入分类名称'  ref={input =>this.props.setInput(input)}></Input>\n                </Item>\n                {/* <Item></Item><Input></Input>\n                <Input></Input> */}\n            </Form>\n        )\n    }\n}\n","/Users/danyangliu/Downloads/React-admin/src/pages/role/setTree.jsx",["160"],"import React, { Component } from \"react\";\nimport { Tree, Input, Form } from \"antd\";\nimport menuConfig from \"../../config/menuConfig\";\nimport menuList from \"../../config/menuConfig\";\nimport PropTypes from \"prop-types\";\n\nexport default class SetTree extends Component {\n  static propTypes = {\n    role: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    const { menus } = this.props.role;\n    // console.log(menus)\n    this.state = {\n      checkedKeys: menus,\n    };\n    // this.setRole=setRole\n    // this.setState({\n    //     checkedKeys:menus,\n    // })\n  }\n  // getTreeNodes=()=>{\n  //     return menuList.reduce((pre,item)=>{\n  //         pre\n  //         return pre\n  //     },[])\n  // }\n  // UNSAFE_componentWillMount(){\n  //     console.log(this.props.role.menus)\n  //     this.setState({cheackedKeys:this.props.role.menus})\n  // }\n  /* 为父组件提交获取最新menus数据的方法 */\n  getMenus = () => this.state.checkedKeys;\n\n  render() {\n    const { role } = this.props;\n    const { checkedKeys } = this.state;\n    const treeData = menuConfig;\n  \n    const onCheck = (checkedKeys) => {\n      // console.log(\"onCheck\", checkedKeys);\n      this.setState({ checkedKeys: checkedKeys });\n    };\n    const formItemLayout = {\n      labelCol: { span: 4 }, //左侧label宽度\n      wrapperCol: { span: 10 }, //右侧包裹输入框宽度\n    };\n    // console.log(this.props);\n    // console.log(checkedKeys)\n    return (\n      <Form {...formItemLayout}>\n        <Form.Item label=\"角色名称\">\n          <Input value={role.name} disabled />\n        </Form.Item>\n        <Form.Item>\n          <Tree\n            checkable\n            //   defaultExpandedKeys={['0-0-0', '0-0-1']}\n            defaultExpandAll={true}\n            //   defaultSelectedKeys={['0-0-0', '0-0-1']}\n            checkedKeys={checkedKeys}\n            // onSelect={onSelect}\n            onCheck={onCheck}\n            treeData={treeData}\n          />\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n","/Users/danyangliu/Downloads/React-admin/src/pages/product/add-update.jsx",["161","162","163"],"import React, { Component } from \"react\";\nimport { Card, Form, Input, Cascader, Upload, Button, message } from \"antd\";\nimport LinkButton from \"../../component/link-button\";\nimport { RollbackOutlined } from \"@ant-design/icons\";\nimport { options } from \"less\";\nimport { reqCategorys,reqAddProduct } from \"../../api\";\nimport PicturesWall from \"./pictures-wall\";\nimport PropTypes from \"prop-types\";\nimport RichTextEditor from \"./rich-text-editor\";\n\nconst Item = Form.Item;\nconst TextArea = Input.TextArea;\nexport default class AddUpdate extends Component {\n  static propTypes = {\n    imgs: PropTypes.array,\n  };\n  state = {\n    options: [],\n    setOptions: () => {},\n    cName1: \"\",\n    cName2: \"\",\n  };\n\n  constructor(props) {\n    super(props);\n    //创造保存ref标识的标签对象的容器\n    this.pw = React.createRef();\n    this.editor = React.createRef();\n  }\n  componentDidMount() {\n    this.getCategorys(\"0\");\n  }\n  /* async返回值是新的promise对象,promise结果和值由async的结果 */\n  getCategorys = async (parentId) => {\n    const result = await reqCategorys(parentId);\n    // debugger\n    if (result.status === 0) {\n      const categorys = result.data;\n      if (parentId === \"0\") {\n        this.initOptions(categorys);\n      } else {\n        return categorys; //返回\n      }\n      // console.log(categorys)\n    }\n  };\n\n  initOptions = async (categorys) => {\n    const options = categorys.map((c) => ({\n      //注意小括号\n      value: c._id,\n      label: c.name,\n      isLeaf: false,\n    }));\n    //如果是一个二级分类列表\n    const { isUpdate, product } = this;\n    const { pCategoryId, categoryId } = product;\n    if (isUpdate && pCategoryId !== \"0\") {\n      //获取对应的二级分类列表\n      const subCategorys = await this.getCategorys(pCategoryId);\n      //生成二级下拉列表的options\n      const childOptions = subCategorys.map((c) => ({\n        //注意小括号,生成二级列表\n        value: c._id,\n        label: c.name,\n        isLeaf: true,\n      }));\n      //关联到对应的一级option\n      //找到对应的一级对象\n      //   debugger\n      const targetOption = options.find(\n        (option) => option.value === pCategoryId\n      );\n      if (targetOption) {\n        //如果找到\n        targetOption.children = childOptions;\n      }\n    }\n    // console.log(options)\n    this.setState({ options });\n    // console.log(this.state.options)\n  };\n  //如何判断是修改还是更新\n  UNSAFE_componentWillMount() {\n    console.log(this.props.location);\n    const product = this.props.location.state.desc;\n    //保存是否更新的表示\n    this.isUpdate = !!product;\n    this.product = product || {};\n  }\n  onChange = (value, selectedOptions) => {\n    console.log(value, selectedOptions);\n  };\n  /* 用来加载下面数字组 */\n  loadData = async (selectedOptions) => {\n    const targetOption = selectedOptions[selectedOptions.length - 1];\n    //显示loading\n    targetOption.loading = true;\n    //   load options lazily\n    //获取二级分类列表\n    const subCategorys = await this.getCategorys(targetOption.value);\n    // console.log(subCategorys)\n    if (subCategorys && subCategorys.length > 0) {\n      const cOptions = subCategorys.map((c) => ({\n        //注意小括号,生成二级列表\n        value: c._id,\n        label: c.name,\n        isLeaf: true,\n      }));\n      targetOption.children = cOptions;\n    } else {\n      //当前分类没有二级分类\n      targetOption.isLeaf = true;\n    }\n    targetOption.loading = false;\n    this.setState({ options: [...this.state.options] });\n  };\n  onFinish = async (values) => {//调用接口请求函数去添加/更新\n    //   console.log(\"Success:\", values);\n    const imgs = this.pw.current.getImgs();\n    const detail = this.editor.current.getDetail();\n    //   console.log('imgs',imgs)\n    const {name,desc,price,pCategoryId,categoryId} =values\n    const product = {name,desc,price,imgs,detail,pCategoryId,categoryId}\n    if(this.isUpdate){\n        product._id = this.product._id\n    }\n  console.log(product)\n    const result = await reqAddProduct(product)\n    console.log(result)\n    if(result.status===0){\n        message.success(`${this.isUpdate?'更新':'添加'}商品成功`)\n        this.props.history.goBack()\n    }else{\n      message.error(`${this.isUpdate?'更新':'添加'}商品失败`)\n    }\n\n  };\n  render() {\n    const { isUpdate } = this;\n    const title = (\n      <span>\n        <LinkButton onClick={() => this.props.history.goBack()}>\n          <RollbackOutlined />\n        </LinkButton>\n        {isUpdate ? \"修改商品\" : \"添加商品\"}\n      </span>\n    );\n    const formItemLayout = {\n      labelCol: { span: 3 }, //左侧label宽度\n      wrapperCol: { span: 8 }, //右侧包裹输入框宽度\n    };\n    \n    const tailLayout = {\n      wrapperCol: { offset: 8, span: 16 },\n    };\n    const onFinishFailed = (errorInfo) => {\n      console.log(\"Failed:\", errorInfo);\n    };\n\n    // function onChange(value) {\n    //   console.log(value);\n    // }\n    const {\n      name,\n      desc,\n      price,\n      detail,\n      imgs,\n      pCategoryId,\n      categoryId,\n    } = this.product;\n    const categoryIds = [];\n    if (isUpdate) {\n      //   console.log(\"pCategoryId\", pCategoryId);\n      if (pCategoryId !== \"0\") {\n        categoryIds.push(pCategoryId);\n      }\n    }\n    categoryIds.push(categoryId);\n\n    return (\n      <Card title={title}>\n        <Form\n          onFinish={this.onFinish}\n          onFinishFailed={onFinishFailed}\n          {...formItemLayout}\n        >\n          <Item\n            name=\"name\"\n            label=\"商品名称\"\n            initialValue={name}\n            rules={[{ required: true, message: \"必须输入商品名称!\" }]}\n          >\n            <Input placeholder=\"请输入商品名称\"></Input>\n          </Item>\n          <Item name=\"desc\" label=\"商品描述\" initialValue={desc}>\n            <TextArea\n              placeholder=\"请输入商品描述\"\n              autoSize={{ minRows: 2, maxRows: 6 }}\n            ></TextArea>\n          </Item>\n          <Item\n            name=\"price\"\n            label=\"商品价格\"\n            initialValue={price}\n            rules={[\n              { required: true, message: \"必须输入商品价格!\" },\n              {\n                validator: (_, value) =>\n                  !value || value * 1 > 0\n                    ? Promise.resolve()\n                    : Promise.reject(new Error(\"商品价格必须大于0\")),\n              },\n            ]}\n          >\n            <Input\n              type=\"number\"\n              placeholder=\"请输入商品价格\"\n              addonAfter=\"元\"\n            ></Input>\n          </Item>\n          <Item\n            name=\"categoryIds\"\n            label=\"商品类别\"\n            rules={[{ required: true, message: \"必须选择商品类别!\" }]}\n            initialValue={categoryIds}\n          >\n            <Cascader\n              placeholder=\"请选择\"\n              options={this.state.options}\n              loadData={this.loadData}\n              onChange={this.onChange}\n              changeOnSelect\n            ></Cascader>\n          </Item>\n          <Item\n            name=\"imgs\"\n            label=\"商品图片\"\n            initialValue={name}\n            rules={[{ required: true, message: \"必须输入商品名称!\" }]}\n          >\n            <PicturesWall ref={this.pw} imgs={imgs} />\n          </Item>\n          {/* 输入的是数值,指定type */}\n          <Item\n            name=\"detail\"\n            label=\"商品详情\"\n            labelCol={{ span: 3 }}\n            wrapperCol= {{ span: 20 }}\n          >\n            <RichTextEditor ref={this.editor } detail={detail}/>\n          </Item>\n          <Form.Item {...tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </Card>\n    );\n  }\n}\n\n/* 子组件调用父组件的方法:将父组件的方法以函数属性的形式传递给子组件,子组件就可以调用\n父组件调用子组件的方法 :在父组件忠通过ref得到子组件标签对象(组件对象),调用其方法*/\n","/Users/danyangliu/Downloads/React-admin/src/pages/product/home.jsx",["164","165"],"import React, { Component } from \"react\";\nimport { Message, Card, Select, Input, Button, Table, message } from \"antd\";\nimport {} from \"@ant-design/icons\";\nimport LinkButton from \"../../component/link-button\";\nimport { reqProducts, reqProductsSearch,reqUpdateStatus } from \"../../api/\";\nimport { PAGE_SIZE } from \"../../utils/constant\";\nimport { set } from \"store\";\n/* 默认字路由 */\nconst Option = Select.Option;\nexport default class Home extends Component {\n  state = {\n    products: [],\n    total: 0,\n    loading: false,\n    searchName: \"\",\n    searchType: \"productName\",/* 受控组件 */\n    \n  };\n  /* 获取指定页码的料表数据 */\n  getProducts = async (pageNum) => {\n      this.pageNum=pageNum\n    const { searchType, searchName } = this.state;\n    this.setState({ loading: true });\n    let result;\n    // console.log(searchType)\n    /* 实现一个函数实现两种请求 */\n    if (searchName !=='') {\n      result = await reqProductsSearch(\n        pageNum,\n        PAGE_SIZE,\n        searchName,\n        searchType\n      );\n    } else {\n      result = await reqProducts(pageNum, PAGE_SIZE);\n    }\n    console.log(result);\n    this.setState({ loading: false });\n    if (result.status === 0) {\n      this.setState({\n        products: result.data.list,\n        total: result.data.total,\n      });\n    } else {\n      Message.error(\"请求失败，请稍后重试\");\n    }\n  };\n\n  UNSAFE_componentWillMount() {\n    this.columns = [\n      {\n        width: 200,\n        title: \"商品名称\",\n        dataIndex: \"name\",\n        key: \"name\",\n      },\n      {\n        title: \"商品描述\",\n        dataIndex: \"desc\",\n        key: \"desc\",\n      },\n      {\n        width: 100,\n        title: \"价格\",\n        dataIndex: \"price\",\n        key: \"price\",\n        render: (price) => \"￥\" + price,\n      },\n      {\n        width: 150,\n        title: \"状态\",\n        dataIndex: \"status\",\n        key: \"status\",\n        render: (status,_id) => {\n        const newStatus = status ===1?2:1\n          return  (\n            <span>\n              <Button type=\"primary\" onClick={()=>this.updateStatus(_id,newStatus)}>{status===1?'下架':'上架'}</Button>\n              <span>{status===1?'在售':'已下架'}</span>\n            </span>\n          )  \n        },\n      },\n      {\n        width: 100,\n        title: \"操作\",\n        dataIndex: \"name,desc,price,detail,imgs\",\n        key: \"action\",\n        render: (name,desc,price,detail,imgs,categoryId,pCategoryId) => {\n          return (\n            <span>\n              <LinkButton onClick={()=>this.props.history.push('/product/detail',{desc})}>详情</LinkButton>\n              <LinkButton onClick={()=>this.props.history.push('/product/addupdate',{desc})}>修改</LinkButton>\n            </span>\n          );\n        },\n      },\n    ];\n  }\n   updateStatus = async (productId,status)=>{\n    const result = await reqUpdateStatus(productId,status);\n    // console.log(result)\n    if(result.status===0){\n        message.success('更新商品成功')\n        this.getProducts(this.pageNum)\n    }else{\n        message.error('更新商品失败')\n    }\n\n  }\n  componentDidMount() {\n    this.getProducts(1);\n  }\n  render() {\n    const { searchType, searchName } = this.state;\n    const title = (\n      <span>\n        <Select\n          value={searchType}\n          style={{ width: 150 }}\n          onChange={(value) => this.setState({ searchType: value })}\n        >\n          <Option value=\"productName\">按名称搜索</Option>\n          <Option value=\"productDesc\">按描述搜索</Option>\n        </Select>\n        <Input\n          style={{ width: 200 }}\n          placeholder=\"关键字\"\n          onChange={(event) =>\n            this.setState({ searchName: event.target.value })\n          }\n        />\n        <Button type=\"primary\" onClick={() => this.getProducts(1)}>\n          搜索\n        </Button>\n      </span>\n    );\n    const extra = <button onClick={()=>{this.props.history.push('/product/addupdate')}}>添加</button>;\n\n    return (\n      <Card title={title} extra={extra} className=\"product\">\n        <Table\n          loading={this.state.loading}\n          pagination={{\n            current:this.pageNum,  //跳转\n            total: this.state.total,\n            defaultPageSize: PAGE_SIZE,\n            showQuickJumper: true,\n            onChange: (pageNum) => {\n              this.getProducts(pageNum);\n            },\n          }}\n          bordered\n          rowKey=\"_id\"\n          dataSource={this.state.products}\n          columns={this.columns}\n        />\n      </Card>\n    );\n  }\n}\n","/Users/danyangliu/Downloads/React-admin/src/pages/product/detail.jsx",[],"/Users/danyangliu/Downloads/React-admin/src/pages/users/user-form.jsx",[],"/Users/danyangliu/Downloads/React-admin/src/component/link-button/index.jsx",[],"/Users/danyangliu/Downloads/React-admin/src/pages/product/rich-text-editor.jsx",[],"/Users/danyangliu/Downloads/React-admin/src/pages/product/pictures-wall.jsx",[],{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":5,"column":8,"nodeType":"172","messageId":"173","endLine":5,"endColumn":19},{"ruleId":"170","severity":1,"message":"174","line":2,"column":8,"nodeType":"172","messageId":"173","endLine":2,"endColumn":12},{"ruleId":"175","severity":1,"message":"176","line":59,"column":7,"nodeType":"177","messageId":"178","endLine":59,"endColumn":13},{"ruleId":"170","severity":1,"message":"179","line":7,"column":10,"nodeType":"172","messageId":"173","endLine":7,"endColumn":13},{"ruleId":"170","severity":1,"message":"180","line":2,"column":31,"nodeType":"172","messageId":"173","endLine":2,"endColumn":36},{"ruleId":"170","severity":1,"message":"181","line":3,"column":10,"nodeType":"172","messageId":"173","endLine":3,"endColumn":19},{"ruleId":"170","severity":1,"message":"182","line":4,"column":10,"nodeType":"172","messageId":"173","endLine":4,"endColumn":21},{"ruleId":"170","severity":1,"message":"183","line":6,"column":8,"nodeType":"172","messageId":"173","endLine":6,"endColumn":20},{"ruleId":"170","severity":1,"message":"184","line":8,"column":10,"nodeType":"172","messageId":"173","endLine":8,"endColumn":20},{"ruleId":"170","severity":1,"message":"185","line":8,"column":32,"nodeType":"172","messageId":"173","endLine":8,"endColumn":50},{"ruleId":"170","severity":1,"message":"186","line":9,"column":8,"nodeType":"172","messageId":"173","endLine":9,"endColumn":16},{"ruleId":"170","severity":1,"message":"187","line":137,"column":20,"nodeType":"172","messageId":"173","endLine":137,"endColumn":30},{"ruleId":"170","severity":1,"message":"188","line":137,"column":32,"nodeType":"172","messageId":"173","endLine":137,"endColumn":37},{"ruleId":"170","severity":1,"message":"174","line":5,"column":8,"nodeType":"172","messageId":"173","endLine":5,"endColumn":12},{"ruleId":"170","severity":1,"message":"171","line":7,"column":8,"nodeType":"172","messageId":"173","endLine":7,"endColumn":19},{"ruleId":"189","severity":1,"message":"190","line":115,"column":11,"nodeType":"191","endLine":115,"endColumn":15},{"ruleId":"192","severity":1,"message":"193","line":24,"column":11,"nodeType":"194","endLine":24,"endColumn":26},{"ruleId":"170","severity":1,"message":"195","line":1,"column":42,"nodeType":"172","messageId":"173","endLine":1,"endColumn":54},{"ruleId":"170","severity":1,"message":"196","line":1,"column":55,"nodeType":"172","messageId":"173","endLine":1,"endColumn":67},{"ruleId":"170","severity":1,"message":"197","line":1,"column":96,"nodeType":"172","messageId":"173","endLine":1,"endColumn":113},{"ruleId":"170","severity":1,"message":"198","line":1,"column":114,"nodeType":"172","messageId":"173","endLine":1,"endColumn":130},{"ruleId":"170","severity":1,"message":"199","line":1,"column":131,"nodeType":"172","messageId":"173","endLine":1,"endColumn":145},{"ruleId":"170","severity":1,"message":"200","line":1,"column":146,"nodeType":"172","messageId":"173","endLine":1,"endColumn":163},{"ruleId":"170","severity":1,"message":"201","line":6,"column":7,"nodeType":"172","messageId":"173","endLine":6,"endColumn":13},{"ruleId":"192","severity":1,"message":"193","line":24,"column":36,"nodeType":"194","endLine":24,"endColumn":51},{"ruleId":"170","severity":1,"message":"202","line":4,"column":8,"nodeType":"172","messageId":"173","endLine":4,"endColumn":16},{"ruleId":"170","severity":1,"message":"203","line":2,"column":39,"nodeType":"172","messageId":"173","endLine":2,"endColumn":45},{"ruleId":"170","severity":1,"message":"204","line":5,"column":10,"nodeType":"172","messageId":"173","endLine":5,"endColumn":17},{"ruleId":"170","severity":1,"message":"205","line":57,"column":26,"nodeType":"172","messageId":"173","endLine":57,"endColumn":36},{"ruleId":"170","severity":1,"message":"206","line":7,"column":10,"nodeType":"172","messageId":"173","endLine":7,"endColumn":13},{"ruleId":"170","severity":1,"message":"207","line":115,"column":25,"nodeType":"172","messageId":"173","endLine":115,"endColumn":35},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"no-unused-vars","'memoryUtils' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'get' is defined but never used.","'Modal' is defined but never used.","'PAGE_SIZE' is defined but never used.","'formateDate' is defined but never used.","'storageUtils' is defined but never used.","'reqDelUser' is defined but never used.","'reqAddOrUpdateUser' is defined but never used.","'UserForm' is defined but never used.","'showStatus' is assigned a value but never used.","'roles' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'BarsOutlined' is defined but never used.","'ToolOutlined' is defined but never used.","'AreaChartOutlined' is defined but never used.","'BarChartOutlined' is defined but never used.","'PieChartFilled' is defined but never used.","'LineChartOutlined' is defined but never used.","'Option' is assigned a value but never used.","'menuList' is defined but never used.","'Upload' is defined but never used.","'options' is defined but never used.","'categoryId' is assigned a value but never used.","'set' is defined but never used.","'searchName' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]